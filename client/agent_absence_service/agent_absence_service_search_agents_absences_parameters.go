// Code generated by go-swagger; DO NOT EDIT.

package agent_absence_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAgentAbsenceServiceSearchAgentsAbsencesParams creates a new AgentAbsenceServiceSearchAgentsAbsencesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAgentAbsenceServiceSearchAgentsAbsencesParams() *AgentAbsenceServiceSearchAgentsAbsencesParams {
	return &AgentAbsenceServiceSearchAgentsAbsencesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithTimeout creates a new AgentAbsenceServiceSearchAgentsAbsencesParams object
// with the ability to set a timeout on a request.
func NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithTimeout(timeout time.Duration) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	return &AgentAbsenceServiceSearchAgentsAbsencesParams{
		timeout: timeout,
	}
}

// NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithContext creates a new AgentAbsenceServiceSearchAgentsAbsencesParams object
// with the ability to set a context for a request.
func NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithContext(ctx context.Context) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	return &AgentAbsenceServiceSearchAgentsAbsencesParams{
		Context: ctx,
	}
}

// NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithHTTPClient creates a new AgentAbsenceServiceSearchAgentsAbsencesParams object
// with the ability to set a custom HTTPClient for a request.
func NewAgentAbsenceServiceSearchAgentsAbsencesParamsWithHTTPClient(client *http.Client) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	return &AgentAbsenceServiceSearchAgentsAbsencesParams{
		HTTPClient: client,
	}
}

/*
AgentAbsenceServiceSearchAgentsAbsencesParams contains all the parameters to send to the API endpoint

	for the agent absence service search agents absences operation.

	Typically these are written to a http.Request.
*/
type AgentAbsenceServiceSearchAgentsAbsencesParams struct {

	// AbsentAtFrom.
	//
	// Format: int64
	AbsentAtFrom *string

	// AbsentAtTo.
	//
	// Format: int64
	AbsentAtTo *string

	// Fields.
	Fields []string

	// Page.
	//
	// Format: int32
	Page *int32

	// Q.
	Q *string

	// Size.
	//
	// Format: int32
	Size *int32

	// SkillID.
	SkillID []string

	// Sort.
	Sort *string

	// SupervisorID.
	SupervisorID []string

	// TeamID.
	TeamID []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the agent absence service search agents absences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithDefaults() *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the agent absence service search agents absences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithTimeout(timeout time.Duration) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithContext(ctx context.Context) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithHTTPClient(client *http.Client) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAbsentAtFrom adds the absentAtFrom to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithAbsentAtFrom(absentAtFrom *string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetAbsentAtFrom(absentAtFrom)
	return o
}

// SetAbsentAtFrom adds the absentAtFrom to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetAbsentAtFrom(absentAtFrom *string) {
	o.AbsentAtFrom = absentAtFrom
}

// WithAbsentAtTo adds the absentAtTo to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithAbsentAtTo(absentAtTo *string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetAbsentAtTo(absentAtTo)
	return o
}

// SetAbsentAtTo adds the absentAtTo to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetAbsentAtTo(absentAtTo *string) {
	o.AbsentAtTo = absentAtTo
}

// WithFields adds the fields to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithFields(fields []string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithPage adds the page to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithPage(page *int32) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetPage(page *int32) {
	o.Page = page
}

// WithQ adds the q to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithQ(q *string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetQ(q *string) {
	o.Q = q
}

// WithSize adds the size to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithSize(size *int32) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetSize(size *int32) {
	o.Size = size
}

// WithSkillID adds the skillID to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithSkillID(skillID []string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetSkillID(skillID)
	return o
}

// SetSkillID adds the skillId to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetSkillID(skillID []string) {
	o.SkillID = skillID
}

// WithSort adds the sort to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithSort(sort *string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithSupervisorID adds the supervisorID to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithSupervisorID(supervisorID []string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetSupervisorID(supervisorID)
	return o
}

// SetSupervisorID adds the supervisorId to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetSupervisorID(supervisorID []string) {
	o.SupervisorID = supervisorID
}

// WithTeamID adds the teamID to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WithTeamID(teamID []string) *AgentAbsenceServiceSearchAgentsAbsencesParams {
	o.SetTeamID(teamID)
	return o
}

// SetTeamID adds the teamId to the agent absence service search agents absences params
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) SetTeamID(teamID []string) {
	o.TeamID = teamID
}

// WriteToRequest writes these params to a swagger request
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AbsentAtFrom != nil {

		// query param absent_at_from
		var qrAbsentAtFrom string

		if o.AbsentAtFrom != nil {
			qrAbsentAtFrom = *o.AbsentAtFrom
		}
		qAbsentAtFrom := qrAbsentAtFrom
		if qAbsentAtFrom != "" {

			if err := r.SetQueryParam("absent_at_from", qAbsentAtFrom); err != nil {
				return err
			}
		}
	}

	if o.AbsentAtTo != nil {

		// query param absent_at_to
		var qrAbsentAtTo string

		if o.AbsentAtTo != nil {
			qrAbsentAtTo = *o.AbsentAtTo
		}
		qAbsentAtTo := qrAbsentAtTo
		if qAbsentAtTo != "" {

			if err := r.SetQueryParam("absent_at_to", qAbsentAtTo); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.SkillID != nil {

		// binding items for skill_id
		joinedSkillID := o.bindParamSkillID(reg)

		// query array param skill_id
		if err := r.SetQueryParam("skill_id", joinedSkillID...); err != nil {
			return err
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.SupervisorID != nil {

		// binding items for supervisor_id
		joinedSupervisorID := o.bindParamSupervisorID(reg)

		// query array param supervisor_id
		if err := r.SetQueryParam("supervisor_id", joinedSupervisorID...); err != nil {
			return err
		}
	}

	if o.TeamID != nil {

		// binding items for team_id
		joinedTeamID := o.bindParamTeamID(reg)

		// query array param team_id
		if err := r.SetQueryParam("team_id", joinedTeamID...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamAgentAbsenceServiceSearchAgentsAbsences binds the parameter fields
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "multi"
	fieldsIS := swag.JoinByFormat(fieldsIC, "multi")

	return fieldsIS
}

// bindParamAgentAbsenceServiceSearchAgentsAbsences binds the parameter skill_id
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) bindParamSkillID(formats strfmt.Registry) []string {
	skillIDIR := o.SkillID

	var skillIDIC []string
	for _, skillIDIIR := range skillIDIR { // explode []string

		skillIDIIV := skillIDIIR // string as string
		skillIDIC = append(skillIDIC, skillIDIIV)
	}

	// items.CollectionFormat: "multi"
	skillIDIS := swag.JoinByFormat(skillIDIC, "multi")

	return skillIDIS
}

// bindParamAgentAbsenceServiceSearchAgentsAbsences binds the parameter supervisor_id
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) bindParamSupervisorID(formats strfmt.Registry) []string {
	supervisorIDIR := o.SupervisorID

	var supervisorIDIC []string
	for _, supervisorIDIIR := range supervisorIDIR { // explode []string

		supervisorIDIIV := supervisorIDIIR // string as string
		supervisorIDIC = append(supervisorIDIC, supervisorIDIIV)
	}

	// items.CollectionFormat: "multi"
	supervisorIDIS := swag.JoinByFormat(supervisorIDIC, "multi")

	return supervisorIDIS
}

// bindParamAgentAbsenceServiceSearchAgentsAbsences binds the parameter team_id
func (o *AgentAbsenceServiceSearchAgentsAbsencesParams) bindParamTeamID(formats strfmt.Registry) []string {
	teamIDIR := o.TeamID

	var teamIDIC []string
	for _, teamIDIIR := range teamIDIR { // explode []string

		teamIDIIV := teamIDIIR // string as string
		teamIDIC = append(teamIDIC, teamIDIIV)
	}

	// items.CollectionFormat: "multi"
	teamIDIS := swag.JoinByFormat(teamIDIC, "multi")

	return teamIDIS
}
