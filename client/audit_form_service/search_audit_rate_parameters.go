// Code generated by go-swagger; DO NOT EDIT.

package audit_form_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchAuditRateParams creates a new SearchAuditRateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchAuditRateParams() *SearchAuditRateParams {
	return &SearchAuditRateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchAuditRateParamsWithTimeout creates a new SearchAuditRateParams object
// with the ability to set a timeout on a request.
func NewSearchAuditRateParamsWithTimeout(timeout time.Duration) *SearchAuditRateParams {
	return &SearchAuditRateParams{
		timeout: timeout,
	}
}

// NewSearchAuditRateParamsWithContext creates a new SearchAuditRateParams object
// with the ability to set a context for a request.
func NewSearchAuditRateParamsWithContext(ctx context.Context) *SearchAuditRateParams {
	return &SearchAuditRateParams{
		Context: ctx,
	}
}

// NewSearchAuditRateParamsWithHTTPClient creates a new SearchAuditRateParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchAuditRateParamsWithHTTPClient(client *http.Client) *SearchAuditRateParams {
	return &SearchAuditRateParams{
		HTTPClient: client,
	}
}

/*
SearchAuditRateParams contains all the parameters to send to the API endpoint

	for the search audit rate operation.

	Typically these are written to a http.Request.
*/
type SearchAuditRateParams struct {

	// CallID.
	CallID []string

	// CreatedAtFrom.
	//
	// Format: int64
	CreatedAtFrom *string

	// CreatedAtTo.
	//
	// Format: int64
	CreatedAtTo *string

	// Fields.
	Fields []string

	// FormID.
	//
	// Format: int32
	FormID int32

	// ID.
	ID []int32

	// Page.
	//
	// Format: int32
	Page *int32

	// Q.
	Q *string

	// RatedUser.
	RatedUser []string

	// Size.
	//
	// Format: int32
	Size *int32

	// Sort.
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search audit rate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAuditRateParams) WithDefaults() *SearchAuditRateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search audit rate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAuditRateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search audit rate params
func (o *SearchAuditRateParams) WithTimeout(timeout time.Duration) *SearchAuditRateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search audit rate params
func (o *SearchAuditRateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search audit rate params
func (o *SearchAuditRateParams) WithContext(ctx context.Context) *SearchAuditRateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search audit rate params
func (o *SearchAuditRateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search audit rate params
func (o *SearchAuditRateParams) WithHTTPClient(client *http.Client) *SearchAuditRateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search audit rate params
func (o *SearchAuditRateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCallID adds the callID to the search audit rate params
func (o *SearchAuditRateParams) WithCallID(callID []string) *SearchAuditRateParams {
	o.SetCallID(callID)
	return o
}

// SetCallID adds the callId to the search audit rate params
func (o *SearchAuditRateParams) SetCallID(callID []string) {
	o.CallID = callID
}

// WithCreatedAtFrom adds the createdAtFrom to the search audit rate params
func (o *SearchAuditRateParams) WithCreatedAtFrom(createdAtFrom *string) *SearchAuditRateParams {
	o.SetCreatedAtFrom(createdAtFrom)
	return o
}

// SetCreatedAtFrom adds the createdAtFrom to the search audit rate params
func (o *SearchAuditRateParams) SetCreatedAtFrom(createdAtFrom *string) {
	o.CreatedAtFrom = createdAtFrom
}

// WithCreatedAtTo adds the createdAtTo to the search audit rate params
func (o *SearchAuditRateParams) WithCreatedAtTo(createdAtTo *string) *SearchAuditRateParams {
	o.SetCreatedAtTo(createdAtTo)
	return o
}

// SetCreatedAtTo adds the createdAtTo to the search audit rate params
func (o *SearchAuditRateParams) SetCreatedAtTo(createdAtTo *string) {
	o.CreatedAtTo = createdAtTo
}

// WithFields adds the fields to the search audit rate params
func (o *SearchAuditRateParams) WithFields(fields []string) *SearchAuditRateParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the search audit rate params
func (o *SearchAuditRateParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithFormID adds the formID to the search audit rate params
func (o *SearchAuditRateParams) WithFormID(formID int32) *SearchAuditRateParams {
	o.SetFormID(formID)
	return o
}

// SetFormID adds the formId to the search audit rate params
func (o *SearchAuditRateParams) SetFormID(formID int32) {
	o.FormID = formID
}

// WithID adds the id to the search audit rate params
func (o *SearchAuditRateParams) WithID(id []int32) *SearchAuditRateParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the search audit rate params
func (o *SearchAuditRateParams) SetID(id []int32) {
	o.ID = id
}

// WithPage adds the page to the search audit rate params
func (o *SearchAuditRateParams) WithPage(page *int32) *SearchAuditRateParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the search audit rate params
func (o *SearchAuditRateParams) SetPage(page *int32) {
	o.Page = page
}

// WithQ adds the q to the search audit rate params
func (o *SearchAuditRateParams) WithQ(q *string) *SearchAuditRateParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the search audit rate params
func (o *SearchAuditRateParams) SetQ(q *string) {
	o.Q = q
}

// WithRatedUser adds the ratedUser to the search audit rate params
func (o *SearchAuditRateParams) WithRatedUser(ratedUser []string) *SearchAuditRateParams {
	o.SetRatedUser(ratedUser)
	return o
}

// SetRatedUser adds the ratedUser to the search audit rate params
func (o *SearchAuditRateParams) SetRatedUser(ratedUser []string) {
	o.RatedUser = ratedUser
}

// WithSize adds the size to the search audit rate params
func (o *SearchAuditRateParams) WithSize(size *int32) *SearchAuditRateParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the search audit rate params
func (o *SearchAuditRateParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the search audit rate params
func (o *SearchAuditRateParams) WithSort(sort *string) *SearchAuditRateParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the search audit rate params
func (o *SearchAuditRateParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *SearchAuditRateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CallID != nil {

		// binding items for call_id
		joinedCallID := o.bindParamCallID(reg)

		// query array param call_id
		if err := r.SetQueryParam("call_id", joinedCallID...); err != nil {
			return err
		}
	}

	if o.CreatedAtFrom != nil {

		// query param created_at.from
		var qrCreatedAtFrom string

		if o.CreatedAtFrom != nil {
			qrCreatedAtFrom = *o.CreatedAtFrom
		}
		qCreatedAtFrom := qrCreatedAtFrom
		if qCreatedAtFrom != "" {

			if err := r.SetQueryParam("created_at.from", qCreatedAtFrom); err != nil {
				return err
			}
		}
	}

	if o.CreatedAtTo != nil {

		// query param created_at.to
		var qrCreatedAtTo string

		if o.CreatedAtTo != nil {
			qrCreatedAtTo = *o.CreatedAtTo
		}
		qCreatedAtTo := qrCreatedAtTo
		if qCreatedAtTo != "" {

			if err := r.SetQueryParam("created_at.to", qCreatedAtTo); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	// path param form_id
	if err := r.SetPathParam("form_id", swag.FormatInt32(o.FormID)); err != nil {
		return err
	}

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.RatedUser != nil {

		// binding items for rated_user
		joinedRatedUser := o.bindParamRatedUser(reg)

		// query array param rated_user
		if err := r.SetQueryParam("rated_user", joinedRatedUser...); err != nil {
			return err
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSearchAuditRate binds the parameter call_id
func (o *SearchAuditRateParams) bindParamCallID(formats strfmt.Registry) []string {
	callIDIR := o.CallID

	var callIDIC []string
	for _, callIDIIR := range callIDIR { // explode []string

		callIDIIV := callIDIIR // string as string
		callIDIC = append(callIDIC, callIDIIV)
	}

	// items.CollectionFormat: "multi"
	callIDIS := swag.JoinByFormat(callIDIC, "multi")

	return callIDIS
}

// bindParamSearchAuditRate binds the parameter fields
func (o *SearchAuditRateParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "multi"
	fieldsIS := swag.JoinByFormat(fieldsIC, "multi")

	return fieldsIS
}

// bindParamSearchAuditRate binds the parameter id
func (o *SearchAuditRateParams) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []int32

		iDIIV := swag.FormatInt32(iDIIR) // int32 as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: "multi"
	iDIS := swag.JoinByFormat(iDIC, "multi")

	return iDIS
}

// bindParamSearchAuditRate binds the parameter rated_user
func (o *SearchAuditRateParams) bindParamRatedUser(formats strfmt.Registry) []string {
	ratedUserIR := o.RatedUser

	var ratedUserIC []string
	for _, ratedUserIIR := range ratedUserIR { // explode []string

		ratedUserIIV := ratedUserIIR // string as string
		ratedUserIC = append(ratedUserIC, ratedUserIIV)
	}

	// items.CollectionFormat: "multi"
	ratedUserIS := swag.JoinByFormat(ratedUserIC, "multi")

	return ratedUserIS
}
