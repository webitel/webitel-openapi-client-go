// Code generated by go-swagger; DO NOT EDIT.

package cognitive_profile_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// New creates a new cognitive profile service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cognitive profile service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateCognitiveProfile(body *models.StorageCreateCognitiveProfileRequest, opts ...ClientOption) (*CreateCognitiveProfileOK, error)
	CreateCognitiveProfileWithParams(params *CreateCognitiveProfileParams, opts ...ClientOption) (*CreateCognitiveProfileOK, error)

	DeleteCognitiveProfile(id string, opts ...ClientOption) (*DeleteCognitiveProfileOK, error)
	DeleteCognitiveProfileWithParams(params *DeleteCognitiveProfileParams, opts ...ClientOption) (*DeleteCognitiveProfileOK, error)

	PatchCognitiveProfile(id string, body *models.StoragePatchCognitiveProfileRequest, opts ...ClientOption) (*PatchCognitiveProfileOK, error)
	PatchCognitiveProfileWithParams(params *PatchCognitiveProfileParams, opts ...ClientOption) (*PatchCognitiveProfileOK, error)

	ReadCognitiveProfile(id string, opts ...ClientOption) (*ReadCognitiveProfileOK, error)
	ReadCognitiveProfileWithParams(params *ReadCognitiveProfileParams, opts ...ClientOption) (*ReadCognitiveProfileOK, error)

	SearchCognitiveProfile(params *SearchCognitiveProfileParams, opts ...ClientOption) (*SearchCognitiveProfileOK, error)

	UpdateCognitiveProfile(id string, body *models.StorageUpdateCognitiveProfileRequest, opts ...ClientOption) (*UpdateCognitiveProfileOK, error)
	UpdateCognitiveProfileWithParams(params *UpdateCognitiveProfileParams, opts ...ClientOption) (*UpdateCognitiveProfileOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateCognitiveProfile create cognitive profile API
*/
func (a *Client) CreateCognitiveProfile(body *models.StorageCreateCognitiveProfileRequest, opts ...ClientOption) (*CreateCognitiveProfileOK, error) {
	params := NewCreateCognitiveProfileParams().WithBody(body)
	return a.CreateCognitiveProfileWithParams(params, opts...)
}

func (a *Client) CreateCognitiveProfileWithParams(params *CreateCognitiveProfileParams, opts ...ClientOption) (*CreateCognitiveProfileOK, error) {
	if params == nil {
		params = NewCreateCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateCognitiveProfile",
		Method:             "POST",
		PathPattern:        "/storage/cognitive_profiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteCognitiveProfile removes backend profile
*/
func (a *Client) DeleteCognitiveProfile(id string, opts ...ClientOption) (*DeleteCognitiveProfileOK, error) {
	params := NewDeleteCognitiveProfileParams().WithID(id)
	return a.DeleteCognitiveProfileWithParams(params, opts...)
}

func (a *Client) DeleteCognitiveProfileWithParams(params *DeleteCognitiveProfileParams, opts ...ClientOption) (*DeleteCognitiveProfileOK, error) {
	if params == nil {
		params = NewDeleteCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteCognitiveProfile",
		Method:             "DELETE",
		PathPattern:        "/storage/cognitive_profiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PatchCognitiveProfile patch cognitive profile API
*/
func (a *Client) PatchCognitiveProfile(id string, body *models.StoragePatchCognitiveProfileRequest, opts ...ClientOption) (*PatchCognitiveProfileOK, error) {
	params := NewPatchCognitiveProfileParams().WithBody(body).WithID(id)
	return a.PatchCognitiveProfileWithParams(params, opts...)
}

func (a *Client) PatchCognitiveProfileWithParams(params *PatchCognitiveProfileParams, opts ...ClientOption) (*PatchCognitiveProfileOK, error) {
	if params == nil {
		params = NewPatchCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PatchCognitiveProfile",
		Method:             "PATCH",
		PathPattern:        "/storage/cognitive_profiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ReadCognitiveProfile read cognitive profile API
*/
func (a *Client) ReadCognitiveProfile(id string, opts ...ClientOption) (*ReadCognitiveProfileOK, error) {
	params := NewReadCognitiveProfileParams().WithID(id)
	return a.ReadCognitiveProfileWithParams(params, opts...)
}

func (a *Client) ReadCognitiveProfileWithParams(params *ReadCognitiveProfileParams, opts ...ClientOption) (*ReadCognitiveProfileOK, error) {
	if params == nil {
		params = NewReadCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ReadCognitiveProfile",
		Method:             "GET",
		PathPattern:        "/storage/cognitive_profiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReadCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReadCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SearchCognitiveProfile search cognitive profile API
*/

func (a *Client) SearchCognitiveProfile(params *SearchCognitiveProfileParams, opts ...ClientOption) (*SearchCognitiveProfileOK, error) {
	if params == nil {
		params = NewSearchCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SearchCognitiveProfile",
		Method:             "GET",
		PathPattern:        "/storage/cognitive_profiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SearchCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SearchCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SearchCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateCognitiveProfile update cognitive profile API
*/
func (a *Client) UpdateCognitiveProfile(id string, body *models.StorageUpdateCognitiveProfileRequest, opts ...ClientOption) (*UpdateCognitiveProfileOK, error) {
	params := NewUpdateCognitiveProfileParams().WithBody(body).WithID(id)
	return a.UpdateCognitiveProfileWithParams(params, opts...)
}

func (a *Client) UpdateCognitiveProfileWithParams(params *UpdateCognitiveProfileParams, opts ...ClientOption) (*UpdateCognitiveProfileOK, error) {
	if params == nil {
		params = NewUpdateCognitiveProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateCognitiveProfile",
		Method:             "PUT",
		PathPattern:        "/storage/cognitive_profiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateCognitiveProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCognitiveProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateCognitiveProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
