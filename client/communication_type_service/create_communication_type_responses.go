// Code generated by go-swagger; DO NOT EDIT.

package communication_type_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// CreateCommunicationTypeReader is a Reader for the CreateCommunicationType structure.
type CreateCommunicationTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCommunicationTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCommunicationTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateCommunicationTypeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateCommunicationTypeOK creates a CreateCommunicationTypeOK with default headers values
func NewCreateCommunicationTypeOK() *CreateCommunicationTypeOK {
	return &CreateCommunicationTypeOK{}
}

/*
CreateCommunicationTypeOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateCommunicationTypeOK struct {
	Payload *models.EngineCommunicationType
}

// IsSuccess returns true when this create communication type Ok response has a 2xx status code
func (o *CreateCommunicationTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create communication type Ok response has a 3xx status code
func (o *CreateCommunicationTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create communication type Ok response has a 4xx status code
func (o *CreateCommunicationTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create communication type Ok response has a 5xx status code
func (o *CreateCommunicationTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create communication type Ok response a status code equal to that given
func (o *CreateCommunicationTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create communication type Ok response
func (o *CreateCommunicationTypeOK) Code() int {
	return 200
}

func (o *CreateCommunicationTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /call_center/communication_type][%d] createCommunicationTypeOk %s", 200, payload)
}

func (o *CreateCommunicationTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /call_center/communication_type][%d] createCommunicationTypeOk %s", 200, payload)
}

func (o *CreateCommunicationTypeOK) GetPayload() *models.EngineCommunicationType {
	return o.Payload
}

func (o *CreateCommunicationTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineCommunicationType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCommunicationTypeDefault creates a CreateCommunicationTypeDefault with default headers values
func NewCreateCommunicationTypeDefault(code int) *CreateCommunicationTypeDefault {
	return &CreateCommunicationTypeDefault{
		_statusCode: code,
	}
}

/*
CreateCommunicationTypeDefault describes a response with status code -1, with default header values.

Server error
*/
type CreateCommunicationTypeDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this create communication type default response has a 2xx status code
func (o *CreateCommunicationTypeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create communication type default response has a 3xx status code
func (o *CreateCommunicationTypeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create communication type default response has a 4xx status code
func (o *CreateCommunicationTypeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create communication type default response has a 5xx status code
func (o *CreateCommunicationTypeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create communication type default response a status code equal to that given
func (o *CreateCommunicationTypeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create communication type default response
func (o *CreateCommunicationTypeDefault) Code() int {
	return o._statusCode
}

func (o *CreateCommunicationTypeDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /call_center/communication_type][%d] CreateCommunicationType default %s", o._statusCode, payload)
}

func (o *CreateCommunicationTypeDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /call_center/communication_type][%d] CreateCommunicationType default %s", o._statusCode, payload)
}

func (o *CreateCommunicationTypeDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *CreateCommunicationTypeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
