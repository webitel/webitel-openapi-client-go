// Code generated by go-swagger; DO NOT EDIT.

package communication_type_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// NewPatchCommunicationTypeParams creates a new PatchCommunicationTypeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchCommunicationTypeParams() *PatchCommunicationTypeParams {
	return &PatchCommunicationTypeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchCommunicationTypeParamsWithTimeout creates a new PatchCommunicationTypeParams object
// with the ability to set a timeout on a request.
func NewPatchCommunicationTypeParamsWithTimeout(timeout time.Duration) *PatchCommunicationTypeParams {
	return &PatchCommunicationTypeParams{
		timeout: timeout,
	}
}

// NewPatchCommunicationTypeParamsWithContext creates a new PatchCommunicationTypeParams object
// with the ability to set a context for a request.
func NewPatchCommunicationTypeParamsWithContext(ctx context.Context) *PatchCommunicationTypeParams {
	return &PatchCommunicationTypeParams{
		Context: ctx,
	}
}

// NewPatchCommunicationTypeParamsWithHTTPClient creates a new PatchCommunicationTypeParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchCommunicationTypeParamsWithHTTPClient(client *http.Client) *PatchCommunicationTypeParams {
	return &PatchCommunicationTypeParams{
		HTTPClient: client,
	}
}

/*
PatchCommunicationTypeParams contains all the parameters to send to the API endpoint

	for the patch communication type operation.

	Typically these are written to a http.Request.
*/
type PatchCommunicationTypeParams struct {

	// Body.
	Body *models.EnginePatchCommunicationTypeRequest

	// ID.
	//
	// Format: int64
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch communication type params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchCommunicationTypeParams) WithDefaults() *PatchCommunicationTypeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch communication type params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchCommunicationTypeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch communication type params
func (o *PatchCommunicationTypeParams) WithTimeout(timeout time.Duration) *PatchCommunicationTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch communication type params
func (o *PatchCommunicationTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch communication type params
func (o *PatchCommunicationTypeParams) WithContext(ctx context.Context) *PatchCommunicationTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch communication type params
func (o *PatchCommunicationTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch communication type params
func (o *PatchCommunicationTypeParams) WithHTTPClient(client *http.Client) *PatchCommunicationTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch communication type params
func (o *PatchCommunicationTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch communication type params
func (o *PatchCommunicationTypeParams) WithBody(body *models.EnginePatchCommunicationTypeRequest) *PatchCommunicationTypeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch communication type params
func (o *PatchCommunicationTypeParams) SetBody(body *models.EnginePatchCommunicationTypeRequest) {
	o.Body = body
}

// WithID adds the id to the patch communication type params
func (o *PatchCommunicationTypeParams) WithID(id string) *PatchCommunicationTypeParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch communication type params
func (o *PatchCommunicationTypeParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PatchCommunicationTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
