// Code generated by go-swagger; DO NOT EDIT.

package contacts_chat_catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new contacts chat catalog API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for contacts chat catalog API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	ContactsChatCatalogGetContactChatHistory(params *ContactsChatCatalogGetContactChatHistoryParams, opts ...ClientOption) (*ContactsChatCatalogGetContactChatHistoryOK, error)

	ContactsChatCatalogGetContactChatHistory2(params *ContactsChatCatalogGetContactChatHistory2Params, opts ...ClientOption) (*ContactsChatCatalogGetContactChatHistory2OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
ContactsChatCatalogGetContactChatHistory contacts chat catalog get contact chat history API
*/

func (a *Client) ContactsChatCatalogGetContactChatHistory(params *ContactsChatCatalogGetContactChatHistoryParams, opts ...ClientOption) (*ContactsChatCatalogGetContactChatHistoryOK, error) {
	if params == nil {
		params = NewContactsChatCatalogGetContactChatHistoryParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ContactsChatCatalog_GetContactChatHistory",
		Method:             "GET",
		PathPattern:        "/contacts/{contact_id}/chat/{chat_id}/messages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ContactsChatCatalogGetContactChatHistoryReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ContactsChatCatalogGetContactChatHistoryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ContactsChatCatalog_GetContactChatHistory: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ContactsChatCatalogGetContactChatHistory2 contacts chat catalog get contact chat history2 API
*/

func (a *Client) ContactsChatCatalogGetContactChatHistory2(params *ContactsChatCatalogGetContactChatHistory2Params, opts ...ClientOption) (*ContactsChatCatalogGetContactChatHistory2OK, error) {
	if params == nil {
		params = NewContactsChatCatalogGetContactChatHistory2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "ContactsChatCatalog_GetContactChatHistory2",
		Method:             "GET",
		PathPattern:        "/contacts/{contact_id}/chat/messages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ContactsChatCatalogGetContactChatHistory2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ContactsChatCatalogGetContactChatHistory2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ContactsChatCatalog_GetContactChatHistory2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
