// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDevicesDeleteDeviceParams creates a new DevicesDeleteDeviceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDevicesDeleteDeviceParams() *DevicesDeleteDeviceParams {
	return &DevicesDeleteDeviceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDevicesDeleteDeviceParamsWithTimeout creates a new DevicesDeleteDeviceParams object
// with the ability to set a timeout on a request.
func NewDevicesDeleteDeviceParamsWithTimeout(timeout time.Duration) *DevicesDeleteDeviceParams {
	return &DevicesDeleteDeviceParams{
		timeout: timeout,
	}
}

// NewDevicesDeleteDeviceParamsWithContext creates a new DevicesDeleteDeviceParams object
// with the ability to set a context for a request.
func NewDevicesDeleteDeviceParamsWithContext(ctx context.Context) *DevicesDeleteDeviceParams {
	return &DevicesDeleteDeviceParams{
		Context: ctx,
	}
}

// NewDevicesDeleteDeviceParamsWithHTTPClient creates a new DevicesDeleteDeviceParams object
// with the ability to set a custom HTTPClient for a request.
func NewDevicesDeleteDeviceParamsWithHTTPClient(client *http.Client) *DevicesDeleteDeviceParams {
	return &DevicesDeleteDeviceParams{
		HTTPClient: client,
	}
}

/*
DevicesDeleteDeviceParams contains all the parameters to send to the API endpoint

	for the devices delete device operation.

	Typically these are written to a http.Request.
*/
type DevicesDeleteDeviceParams struct {

	// ID.
	//
	// Format: int64
	ID string

	/* Ids.

	   bulk
	*/
	Ids []string

	// Permanent.
	Permanent *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the devices delete device params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DevicesDeleteDeviceParams) WithDefaults() *DevicesDeleteDeviceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the devices delete device params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DevicesDeleteDeviceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithTimeout(timeout time.Duration) *DevicesDeleteDeviceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithContext(ctx context.Context) *DevicesDeleteDeviceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithHTTPClient(client *http.Client) *DevicesDeleteDeviceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithID(id string) *DevicesDeleteDeviceParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetID(id string) {
	o.ID = id
}

// WithIds adds the ids to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithIds(ids []string) *DevicesDeleteDeviceParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithPermanent adds the permanent to the devices delete device params
func (o *DevicesDeleteDeviceParams) WithPermanent(permanent *bool) *DevicesDeleteDeviceParams {
	o.SetPermanent(permanent)
	return o
}

// SetPermanent adds the permanent to the devices delete device params
func (o *DevicesDeleteDeviceParams) SetPermanent(permanent *bool) {
	o.Permanent = permanent
}

// WriteToRequest writes these params to a swagger request
func (o *DevicesDeleteDeviceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.Permanent != nil {

		// query param permanent
		var qrPermanent bool

		if o.Permanent != nil {
			qrPermanent = *o.Permanent
		}
		qPermanent := swag.FormatBool(qrPermanent)
		if qPermanent != "" {

			if err := r.SetQueryParam("permanent", qPermanent); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamDevicesDeleteDevice binds the parameter ids
func (o *DevicesDeleteDeviceParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "multi"
	idsIS := swag.JoinByFormat(idsIC, "multi")

	return idsIS
}
