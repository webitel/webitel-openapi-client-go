// Code generated by go-swagger; DO NOT EDIT.

package file_transcript_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// New creates a new file transcript service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for file transcript service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateFileTranscript(body *models.StorageStartFileTranscriptRequest, opts ...ClientOption) (*CreateFileTranscriptOK, error)
	CreateFileTranscriptWithParams(params *CreateFileTranscriptParams, opts ...ClientOption) (*CreateFileTranscriptOK, error)

	DeleteFileTranscript(body *models.StorageDeleteFileTranscriptRequest, opts ...ClientOption) (*DeleteFileTranscriptOK, error)
	DeleteFileTranscriptWithParams(params *DeleteFileTranscriptParams, opts ...ClientOption) (*DeleteFileTranscriptOK, error)

	GetFileTranscriptPhrases(params *GetFileTranscriptPhrasesParams, opts ...ClientOption) (*GetFileTranscriptPhrasesOK, error)

	PutFileTranscript(body *models.StoragePutFileTranscriptRequest, opts ...ClientOption) (*PutFileTranscriptOK, error)
	PutFileTranscriptWithParams(params *PutFileTranscriptParams, opts ...ClientOption) (*PutFileTranscriptOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateFileTranscript create file transcript API
*/
func (a *Client) CreateFileTranscript(body *models.StorageStartFileTranscriptRequest, opts ...ClientOption) (*CreateFileTranscriptOK, error) {
	params := NewCreateFileTranscriptParams().WithBody(body)
	return a.CreateFileTranscriptWithParams(params, opts...)
}

func (a *Client) CreateFileTranscriptWithParams(params *CreateFileTranscriptParams, opts ...ClientOption) (*CreateFileTranscriptOK, error) {
	if params == nil {
		params = NewCreateFileTranscriptParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateFileTranscript",
		Method:             "POST",
		PathPattern:        "/storage/transcript_file",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateFileTranscriptReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateFileTranscriptOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateFileTranscript: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteFileTranscript delete file transcript API
*/
func (a *Client) DeleteFileTranscript(body *models.StorageDeleteFileTranscriptRequest, opts ...ClientOption) (*DeleteFileTranscriptOK, error) {
	params := NewDeleteFileTranscriptParams().WithBody(body)
	return a.DeleteFileTranscriptWithParams(params, opts...)
}

func (a *Client) DeleteFileTranscriptWithParams(params *DeleteFileTranscriptParams, opts ...ClientOption) (*DeleteFileTranscriptOK, error) {
	if params == nil {
		params = NewDeleteFileTranscriptParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteFileTranscript",
		Method:             "DELETE",
		PathPattern:        "/storage/transcript_file",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteFileTranscriptReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteFileTranscriptOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteFileTranscript: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetFileTranscriptPhrases get file transcript phrases API
*/

func (a *Client) GetFileTranscriptPhrases(params *GetFileTranscriptPhrasesParams, opts ...ClientOption) (*GetFileTranscriptPhrasesOK, error) {
	if params == nil {
		params = NewGetFileTranscriptPhrasesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetFileTranscriptPhrases",
		Method:             "GET",
		PathPattern:        "/storage/transcript_file/{id}/phrases",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFileTranscriptPhrasesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFileTranscriptPhrasesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetFileTranscriptPhrases: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PutFileTranscript put file transcript API
*/
func (a *Client) PutFileTranscript(body *models.StoragePutFileTranscriptRequest, opts ...ClientOption) (*PutFileTranscriptOK, error) {
	params := NewPutFileTranscriptParams().WithBody(body)
	return a.PutFileTranscriptWithParams(params, opts...)
}

func (a *Client) PutFileTranscriptWithParams(params *PutFileTranscriptParams, opts ...ClientOption) (*PutFileTranscriptOK, error) {
	if params == nil {
		params = NewPutFileTranscriptParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PutFileTranscript",
		Method:             "PUT",
		PathPattern:        "/storage/transcript_file",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutFileTranscriptReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutFileTranscriptOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutFileTranscript: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
