// Code generated by go-swagger; DO NOT EDIT.

package member_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// AttemptCallbackReader is a Reader for the AttemptCallback structure.
type AttemptCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttemptCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttemptCallbackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAttemptCallbackDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAttemptCallbackOK creates a AttemptCallbackOK with default headers values
func NewAttemptCallbackOK() *AttemptCallbackOK {
	return &AttemptCallbackOK{}
}

/*
AttemptCallbackOK describes a response with status code 200, with default header values.

A successful response.
*/
type AttemptCallbackOK struct {
	Payload *models.EngineAttemptResultResponse
}

// IsSuccess returns true when this attempt callback Ok response has a 2xx status code
func (o *AttemptCallbackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attempt callback Ok response has a 3xx status code
func (o *AttemptCallbackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attempt callback Ok response has a 4xx status code
func (o *AttemptCallbackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this attempt callback Ok response has a 5xx status code
func (o *AttemptCallbackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this attempt callback Ok response a status code equal to that given
func (o *AttemptCallbackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the attempt callback Ok response
func (o *AttemptCallbackOK) Code() int {
	return 200
}

func (o *AttemptCallbackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/attempts/{attempt_id}][%d] attemptCallbackOk %s", 200, payload)
}

func (o *AttemptCallbackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/attempts/{attempt_id}][%d] attemptCallbackOk %s", 200, payload)
}

func (o *AttemptCallbackOK) GetPayload() *models.EngineAttemptResultResponse {
	return o.Payload
}

func (o *AttemptCallbackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAttemptResultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttemptCallbackDefault creates a AttemptCallbackDefault with default headers values
func NewAttemptCallbackDefault(code int) *AttemptCallbackDefault {
	return &AttemptCallbackDefault{
		_statusCode: code,
	}
}

/*
AttemptCallbackDefault describes a response with status code -1, with default header values.

Server error
*/
type AttemptCallbackDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this attempt callback default response has a 2xx status code
func (o *AttemptCallbackDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this attempt callback default response has a 3xx status code
func (o *AttemptCallbackDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this attempt callback default response has a 4xx status code
func (o *AttemptCallbackDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this attempt callback default response has a 5xx status code
func (o *AttemptCallbackDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this attempt callback default response a status code equal to that given
func (o *AttemptCallbackDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the attempt callback default response
func (o *AttemptCallbackDefault) Code() int {
	return o._statusCode
}

func (o *AttemptCallbackDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/attempts/{attempt_id}][%d] AttemptCallback default %s", o._statusCode, payload)
}

func (o *AttemptCallbackDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/attempts/{attempt_id}][%d] AttemptCallback default %s", o._statusCode, payload)
}

func (o *AttemptCallbackDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *AttemptCallbackDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
