// Code generated by go-swagger; DO NOT EDIT.

package member_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// PatchMemberOneReader is a Reader for the PatchMemberOne structure.
type PatchMemberOneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchMemberOneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchMemberOneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchMemberOneDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchMemberOneOK creates a PatchMemberOneOK with default headers values
func NewPatchMemberOneOK() *PatchMemberOneOK {
	return &PatchMemberOneOK{}
}

/*
PatchMemberOneOK describes a response with status code 200, with default header values.

A successful response.
*/
type PatchMemberOneOK struct {
	Payload *models.EngineMemberInQueue
}

// IsSuccess returns true when this patch member one Ok response has a 2xx status code
func (o *PatchMemberOneOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch member one Ok response has a 3xx status code
func (o *PatchMemberOneOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch member one Ok response has a 4xx status code
func (o *PatchMemberOneOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch member one Ok response has a 5xx status code
func (o *PatchMemberOneOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch member one Ok response a status code equal to that given
func (o *PatchMemberOneOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch member one Ok response
func (o *PatchMemberOneOK) Code() int {
	return 200
}

func (o *PatchMemberOneOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/members/{id}][%d] patchMemberOneOk %s", 200, payload)
}

func (o *PatchMemberOneOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/members/{id}][%d] patchMemberOneOk %s", 200, payload)
}

func (o *PatchMemberOneOK) GetPayload() *models.EngineMemberInQueue {
	return o.Payload
}

func (o *PatchMemberOneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineMemberInQueue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMemberOneDefault creates a PatchMemberOneDefault with default headers values
func NewPatchMemberOneDefault(code int) *PatchMemberOneDefault {
	return &PatchMemberOneDefault{
		_statusCode: code,
	}
}

/*
PatchMemberOneDefault describes a response with status code -1, with default header values.

Server error
*/
type PatchMemberOneDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this patch member one default response has a 2xx status code
func (o *PatchMemberOneDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch member one default response has a 3xx status code
func (o *PatchMemberOneDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch member one default response has a 4xx status code
func (o *PatchMemberOneDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch member one default response has a 5xx status code
func (o *PatchMemberOneDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch member one default response a status code equal to that given
func (o *PatchMemberOneDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the patch member one default response
func (o *PatchMemberOneDefault) Code() int {
	return o._statusCode
}

func (o *PatchMemberOneDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/members/{id}][%d] PatchMemberOne default %s", o._statusCode, payload)
}

func (o *PatchMemberOneDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/members/{id}][%d] PatchMemberOne default %s", o._statusCode, payload)
}

func (o *PatchMemberOneDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *PatchMemberOneDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
