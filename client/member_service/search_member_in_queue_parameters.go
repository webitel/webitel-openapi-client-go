// Code generated by go-swagger; DO NOT EDIT.

package member_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchMemberInQueueParams creates a new SearchMemberInQueueParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchMemberInQueueParams() *SearchMemberInQueueParams {
	return &SearchMemberInQueueParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchMemberInQueueParamsWithTimeout creates a new SearchMemberInQueueParams object
// with the ability to set a timeout on a request.
func NewSearchMemberInQueueParamsWithTimeout(timeout time.Duration) *SearchMemberInQueueParams {
	return &SearchMemberInQueueParams{
		timeout: timeout,
	}
}

// NewSearchMemberInQueueParamsWithContext creates a new SearchMemberInQueueParams object
// with the ability to set a context for a request.
func NewSearchMemberInQueueParamsWithContext(ctx context.Context) *SearchMemberInQueueParams {
	return &SearchMemberInQueueParams{
		Context: ctx,
	}
}

// NewSearchMemberInQueueParamsWithHTTPClient creates a new SearchMemberInQueueParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchMemberInQueueParamsWithHTTPClient(client *http.Client) *SearchMemberInQueueParams {
	return &SearchMemberInQueueParams{
		HTTPClient: client,
	}
}

/*
SearchMemberInQueueParams contains all the parameters to send to the API endpoint

	for the search member in queue operation.

	Typically these are written to a http.Request.
*/
type SearchMemberInQueueParams struct {

	// AgentID.
	AgentID []int32

	// AttemptsFrom.
	//
	// Format: int64
	AttemptsFrom *string

	// AttemptsTo.
	//
	// Format: int64
	AttemptsTo *string

	// BucketID.
	BucketID []int32

	// CreatedAtFrom.
	//
	// Format: int64
	CreatedAtFrom *string

	// CreatedAtTo.
	//
	// Format: int64
	CreatedAtTo *string

	// Destination.
	Destination *string

	// Fields.
	Fields []string

	// ID.
	ID []string

	// Name.
	Name *string

	// OfferingAtFrom.
	//
	// Format: int64
	OfferingAtFrom *string

	// OfferingAtTo.
	//
	// Format: int64
	OfferingAtTo *string

	// Page.
	//
	// Format: int32
	Page *int32

	// PriorityFrom.
	//
	// Format: int64
	PriorityFrom *string

	// PriorityTo.
	//
	// Format: int64
	PriorityTo *string

	// Q.
	Q *string

	// QueueID.
	//
	// Format: int32
	QueueID int32

	// Size.
	//
	// Format: int32
	Size *int32

	// Sort.
	Sort *string

	// StopCause.
	StopCause []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search member in queue params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchMemberInQueueParams) WithDefaults() *SearchMemberInQueueParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search member in queue params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchMemberInQueueParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search member in queue params
func (o *SearchMemberInQueueParams) WithTimeout(timeout time.Duration) *SearchMemberInQueueParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search member in queue params
func (o *SearchMemberInQueueParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search member in queue params
func (o *SearchMemberInQueueParams) WithContext(ctx context.Context) *SearchMemberInQueueParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search member in queue params
func (o *SearchMemberInQueueParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search member in queue params
func (o *SearchMemberInQueueParams) WithHTTPClient(client *http.Client) *SearchMemberInQueueParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search member in queue params
func (o *SearchMemberInQueueParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgentID adds the agentID to the search member in queue params
func (o *SearchMemberInQueueParams) WithAgentID(agentID []int32) *SearchMemberInQueueParams {
	o.SetAgentID(agentID)
	return o
}

// SetAgentID adds the agentId to the search member in queue params
func (o *SearchMemberInQueueParams) SetAgentID(agentID []int32) {
	o.AgentID = agentID
}

// WithAttemptsFrom adds the attemptsFrom to the search member in queue params
func (o *SearchMemberInQueueParams) WithAttemptsFrom(attemptsFrom *string) *SearchMemberInQueueParams {
	o.SetAttemptsFrom(attemptsFrom)
	return o
}

// SetAttemptsFrom adds the attemptsFrom to the search member in queue params
func (o *SearchMemberInQueueParams) SetAttemptsFrom(attemptsFrom *string) {
	o.AttemptsFrom = attemptsFrom
}

// WithAttemptsTo adds the attemptsTo to the search member in queue params
func (o *SearchMemberInQueueParams) WithAttemptsTo(attemptsTo *string) *SearchMemberInQueueParams {
	o.SetAttemptsTo(attemptsTo)
	return o
}

// SetAttemptsTo adds the attemptsTo to the search member in queue params
func (o *SearchMemberInQueueParams) SetAttemptsTo(attemptsTo *string) {
	o.AttemptsTo = attemptsTo
}

// WithBucketID adds the bucketID to the search member in queue params
func (o *SearchMemberInQueueParams) WithBucketID(bucketID []int32) *SearchMemberInQueueParams {
	o.SetBucketID(bucketID)
	return o
}

// SetBucketID adds the bucketId to the search member in queue params
func (o *SearchMemberInQueueParams) SetBucketID(bucketID []int32) {
	o.BucketID = bucketID
}

// WithCreatedAtFrom adds the createdAtFrom to the search member in queue params
func (o *SearchMemberInQueueParams) WithCreatedAtFrom(createdAtFrom *string) *SearchMemberInQueueParams {
	o.SetCreatedAtFrom(createdAtFrom)
	return o
}

// SetCreatedAtFrom adds the createdAtFrom to the search member in queue params
func (o *SearchMemberInQueueParams) SetCreatedAtFrom(createdAtFrom *string) {
	o.CreatedAtFrom = createdAtFrom
}

// WithCreatedAtTo adds the createdAtTo to the search member in queue params
func (o *SearchMemberInQueueParams) WithCreatedAtTo(createdAtTo *string) *SearchMemberInQueueParams {
	o.SetCreatedAtTo(createdAtTo)
	return o
}

// SetCreatedAtTo adds the createdAtTo to the search member in queue params
func (o *SearchMemberInQueueParams) SetCreatedAtTo(createdAtTo *string) {
	o.CreatedAtTo = createdAtTo
}

// WithDestination adds the destination to the search member in queue params
func (o *SearchMemberInQueueParams) WithDestination(destination *string) *SearchMemberInQueueParams {
	o.SetDestination(destination)
	return o
}

// SetDestination adds the destination to the search member in queue params
func (o *SearchMemberInQueueParams) SetDestination(destination *string) {
	o.Destination = destination
}

// WithFields adds the fields to the search member in queue params
func (o *SearchMemberInQueueParams) WithFields(fields []string) *SearchMemberInQueueParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the search member in queue params
func (o *SearchMemberInQueueParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithID adds the id to the search member in queue params
func (o *SearchMemberInQueueParams) WithID(id []string) *SearchMemberInQueueParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the search member in queue params
func (o *SearchMemberInQueueParams) SetID(id []string) {
	o.ID = id
}

// WithName adds the name to the search member in queue params
func (o *SearchMemberInQueueParams) WithName(name *string) *SearchMemberInQueueParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the search member in queue params
func (o *SearchMemberInQueueParams) SetName(name *string) {
	o.Name = name
}

// WithOfferingAtFrom adds the offeringAtFrom to the search member in queue params
func (o *SearchMemberInQueueParams) WithOfferingAtFrom(offeringAtFrom *string) *SearchMemberInQueueParams {
	o.SetOfferingAtFrom(offeringAtFrom)
	return o
}

// SetOfferingAtFrom adds the offeringAtFrom to the search member in queue params
func (o *SearchMemberInQueueParams) SetOfferingAtFrom(offeringAtFrom *string) {
	o.OfferingAtFrom = offeringAtFrom
}

// WithOfferingAtTo adds the offeringAtTo to the search member in queue params
func (o *SearchMemberInQueueParams) WithOfferingAtTo(offeringAtTo *string) *SearchMemberInQueueParams {
	o.SetOfferingAtTo(offeringAtTo)
	return o
}

// SetOfferingAtTo adds the offeringAtTo to the search member in queue params
func (o *SearchMemberInQueueParams) SetOfferingAtTo(offeringAtTo *string) {
	o.OfferingAtTo = offeringAtTo
}

// WithPage adds the page to the search member in queue params
func (o *SearchMemberInQueueParams) WithPage(page *int32) *SearchMemberInQueueParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the search member in queue params
func (o *SearchMemberInQueueParams) SetPage(page *int32) {
	o.Page = page
}

// WithPriorityFrom adds the priorityFrom to the search member in queue params
func (o *SearchMemberInQueueParams) WithPriorityFrom(priorityFrom *string) *SearchMemberInQueueParams {
	o.SetPriorityFrom(priorityFrom)
	return o
}

// SetPriorityFrom adds the priorityFrom to the search member in queue params
func (o *SearchMemberInQueueParams) SetPriorityFrom(priorityFrom *string) {
	o.PriorityFrom = priorityFrom
}

// WithPriorityTo adds the priorityTo to the search member in queue params
func (o *SearchMemberInQueueParams) WithPriorityTo(priorityTo *string) *SearchMemberInQueueParams {
	o.SetPriorityTo(priorityTo)
	return o
}

// SetPriorityTo adds the priorityTo to the search member in queue params
func (o *SearchMemberInQueueParams) SetPriorityTo(priorityTo *string) {
	o.PriorityTo = priorityTo
}

// WithQ adds the q to the search member in queue params
func (o *SearchMemberInQueueParams) WithQ(q *string) *SearchMemberInQueueParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the search member in queue params
func (o *SearchMemberInQueueParams) SetQ(q *string) {
	o.Q = q
}

// WithQueueID adds the queueID to the search member in queue params
func (o *SearchMemberInQueueParams) WithQueueID(queueID int32) *SearchMemberInQueueParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the search member in queue params
func (o *SearchMemberInQueueParams) SetQueueID(queueID int32) {
	o.QueueID = queueID
}

// WithSize adds the size to the search member in queue params
func (o *SearchMemberInQueueParams) WithSize(size *int32) *SearchMemberInQueueParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the search member in queue params
func (o *SearchMemberInQueueParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the search member in queue params
func (o *SearchMemberInQueueParams) WithSort(sort *string) *SearchMemberInQueueParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the search member in queue params
func (o *SearchMemberInQueueParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithStopCause adds the stopCause to the search member in queue params
func (o *SearchMemberInQueueParams) WithStopCause(stopCause []string) *SearchMemberInQueueParams {
	o.SetStopCause(stopCause)
	return o
}

// SetStopCause adds the stopCause to the search member in queue params
func (o *SearchMemberInQueueParams) SetStopCause(stopCause []string) {
	o.StopCause = stopCause
}

// WriteToRequest writes these params to a swagger request
func (o *SearchMemberInQueueParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AgentID != nil {

		// binding items for agent_id
		joinedAgentID := o.bindParamAgentID(reg)

		// query array param agent_id
		if err := r.SetQueryParam("agent_id", joinedAgentID...); err != nil {
			return err
		}
	}

	if o.AttemptsFrom != nil {

		// query param attempts.from
		var qrAttemptsFrom string

		if o.AttemptsFrom != nil {
			qrAttemptsFrom = *o.AttemptsFrom
		}
		qAttemptsFrom := qrAttemptsFrom
		if qAttemptsFrom != "" {

			if err := r.SetQueryParam("attempts.from", qAttemptsFrom); err != nil {
				return err
			}
		}
	}

	if o.AttemptsTo != nil {

		// query param attempts.to
		var qrAttemptsTo string

		if o.AttemptsTo != nil {
			qrAttemptsTo = *o.AttemptsTo
		}
		qAttemptsTo := qrAttemptsTo
		if qAttemptsTo != "" {

			if err := r.SetQueryParam("attempts.to", qAttemptsTo); err != nil {
				return err
			}
		}
	}

	if o.BucketID != nil {

		// binding items for bucket_id
		joinedBucketID := o.bindParamBucketID(reg)

		// query array param bucket_id
		if err := r.SetQueryParam("bucket_id", joinedBucketID...); err != nil {
			return err
		}
	}

	if o.CreatedAtFrom != nil {

		// query param created_at.from
		var qrCreatedAtFrom string

		if o.CreatedAtFrom != nil {
			qrCreatedAtFrom = *o.CreatedAtFrom
		}
		qCreatedAtFrom := qrCreatedAtFrom
		if qCreatedAtFrom != "" {

			if err := r.SetQueryParam("created_at.from", qCreatedAtFrom); err != nil {
				return err
			}
		}
	}

	if o.CreatedAtTo != nil {

		// query param created_at.to
		var qrCreatedAtTo string

		if o.CreatedAtTo != nil {
			qrCreatedAtTo = *o.CreatedAtTo
		}
		qCreatedAtTo := qrCreatedAtTo
		if qCreatedAtTo != "" {

			if err := r.SetQueryParam("created_at.to", qCreatedAtTo); err != nil {
				return err
			}
		}
	}

	if o.Destination != nil {

		// query param destination
		var qrDestination string

		if o.Destination != nil {
			qrDestination = *o.Destination
		}
		qDestination := qrDestination
		if qDestination != "" {

			if err := r.SetQueryParam("destination", qDestination); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OfferingAtFrom != nil {

		// query param offering_at.from
		var qrOfferingAtFrom string

		if o.OfferingAtFrom != nil {
			qrOfferingAtFrom = *o.OfferingAtFrom
		}
		qOfferingAtFrom := qrOfferingAtFrom
		if qOfferingAtFrom != "" {

			if err := r.SetQueryParam("offering_at.from", qOfferingAtFrom); err != nil {
				return err
			}
		}
	}

	if o.OfferingAtTo != nil {

		// query param offering_at.to
		var qrOfferingAtTo string

		if o.OfferingAtTo != nil {
			qrOfferingAtTo = *o.OfferingAtTo
		}
		qOfferingAtTo := qrOfferingAtTo
		if qOfferingAtTo != "" {

			if err := r.SetQueryParam("offering_at.to", qOfferingAtTo); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PriorityFrom != nil {

		// query param priority.from
		var qrPriorityFrom string

		if o.PriorityFrom != nil {
			qrPriorityFrom = *o.PriorityFrom
		}
		qPriorityFrom := qrPriorityFrom
		if qPriorityFrom != "" {

			if err := r.SetQueryParam("priority.from", qPriorityFrom); err != nil {
				return err
			}
		}
	}

	if o.PriorityTo != nil {

		// query param priority.to
		var qrPriorityTo string

		if o.PriorityTo != nil {
			qrPriorityTo = *o.PriorityTo
		}
		qPriorityTo := qrPriorityTo
		if qPriorityTo != "" {

			if err := r.SetQueryParam("priority.to", qPriorityTo); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	// path param queue_id
	if err := r.SetPathParam("queue_id", swag.FormatInt32(o.QueueID)); err != nil {
		return err
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.StopCause != nil {

		// binding items for stop_cause
		joinedStopCause := o.bindParamStopCause(reg)

		// query array param stop_cause
		if err := r.SetQueryParam("stop_cause", joinedStopCause...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSearchMemberInQueue binds the parameter agent_id
func (o *SearchMemberInQueueParams) bindParamAgentID(formats strfmt.Registry) []string {
	agentIDIR := o.AgentID

	var agentIDIC []string
	for _, agentIDIIR := range agentIDIR { // explode []int32

		agentIDIIV := swag.FormatInt32(agentIDIIR) // int32 as string
		agentIDIC = append(agentIDIC, agentIDIIV)
	}

	// items.CollectionFormat: "multi"
	agentIDIS := swag.JoinByFormat(agentIDIC, "multi")

	return agentIDIS
}

// bindParamSearchMemberInQueue binds the parameter bucket_id
func (o *SearchMemberInQueueParams) bindParamBucketID(formats strfmt.Registry) []string {
	bucketIDIR := o.BucketID

	var bucketIDIC []string
	for _, bucketIDIIR := range bucketIDIR { // explode []int32

		bucketIDIIV := swag.FormatInt32(bucketIDIIR) // int32 as string
		bucketIDIC = append(bucketIDIC, bucketIDIIV)
	}

	// items.CollectionFormat: "multi"
	bucketIDIS := swag.JoinByFormat(bucketIDIC, "multi")

	return bucketIDIS
}

// bindParamSearchMemberInQueue binds the parameter fields
func (o *SearchMemberInQueueParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "multi"
	fieldsIS := swag.JoinByFormat(fieldsIC, "multi")

	return fieldsIS
}

// bindParamSearchMemberInQueue binds the parameter id
func (o *SearchMemberInQueueParams) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []string

		iDIIV := iDIIR // string as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: "multi"
	iDIS := swag.JoinByFormat(iDIC, "multi")

	return iDIS
}

// bindParamSearchMemberInQueue binds the parameter stop_cause
func (o *SearchMemberInQueueParams) bindParamStopCause(formats strfmt.Registry) []string {
	stopCauseIR := o.StopCause

	var stopCauseIC []string
	for _, stopCauseIIR := range stopCauseIR { // explode []string

		stopCauseIIV := stopCauseIIR // string as string
		stopCauseIC = append(stopCauseIC, stopCauseIIV)
	}

	// items.CollectionFormat: "multi"
	stopCauseIS := swag.JoinByFormat(stopCauseIC, "multi")

	return stopCauseIS
}
