// Code generated by go-swagger; DO NOT EDIT.

package outbound_resource_group_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// DeleteOutboundResourceGroupReader is a Reader for the DeleteOutboundResourceGroup structure.
type DeleteOutboundResourceGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOutboundResourceGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOutboundResourceGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteOutboundResourceGroupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteOutboundResourceGroupOK creates a DeleteOutboundResourceGroupOK with default headers values
func NewDeleteOutboundResourceGroupOK() *DeleteOutboundResourceGroupOK {
	return &DeleteOutboundResourceGroupOK{}
}

/*
DeleteOutboundResourceGroupOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteOutboundResourceGroupOK struct {
	Payload *models.EngineOutboundResourceGroup
}

// IsSuccess returns true when this delete outbound resource group Ok response has a 2xx status code
func (o *DeleteOutboundResourceGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete outbound resource group Ok response has a 3xx status code
func (o *DeleteOutboundResourceGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete outbound resource group Ok response has a 4xx status code
func (o *DeleteOutboundResourceGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete outbound resource group Ok response has a 5xx status code
func (o *DeleteOutboundResourceGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete outbound resource group Ok response a status code equal to that given
func (o *DeleteOutboundResourceGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete outbound resource group Ok response
func (o *DeleteOutboundResourceGroupOK) Code() int {
	return 200
}

func (o *DeleteOutboundResourceGroupOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /call_center/resource_group/{id}][%d] deleteOutboundResourceGroupOk %s", 200, payload)
}

func (o *DeleteOutboundResourceGroupOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /call_center/resource_group/{id}][%d] deleteOutboundResourceGroupOk %s", 200, payload)
}

func (o *DeleteOutboundResourceGroupOK) GetPayload() *models.EngineOutboundResourceGroup {
	return o.Payload
}

func (o *DeleteOutboundResourceGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineOutboundResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutboundResourceGroupDefault creates a DeleteOutboundResourceGroupDefault with default headers values
func NewDeleteOutboundResourceGroupDefault(code int) *DeleteOutboundResourceGroupDefault {
	return &DeleteOutboundResourceGroupDefault{
		_statusCode: code,
	}
}

/*
DeleteOutboundResourceGroupDefault describes a response with status code -1, with default header values.

Server error
*/
type DeleteOutboundResourceGroupDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this delete outbound resource group default response has a 2xx status code
func (o *DeleteOutboundResourceGroupDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete outbound resource group default response has a 3xx status code
func (o *DeleteOutboundResourceGroupDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete outbound resource group default response has a 4xx status code
func (o *DeleteOutboundResourceGroupDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete outbound resource group default response has a 5xx status code
func (o *DeleteOutboundResourceGroupDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete outbound resource group default response a status code equal to that given
func (o *DeleteOutboundResourceGroupDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete outbound resource group default response
func (o *DeleteOutboundResourceGroupDefault) Code() int {
	return o._statusCode
}

func (o *DeleteOutboundResourceGroupDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /call_center/resource_group/{id}][%d] DeleteOutboundResourceGroup default %s", o._statusCode, payload)
}

func (o *DeleteOutboundResourceGroupDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /call_center/resource_group/{id}][%d] DeleteOutboundResourceGroup default %s", o._statusCode, payload)
}

func (o *DeleteOutboundResourceGroupDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *DeleteOutboundResourceGroupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
