// Code generated by go-swagger; DO NOT EDIT.

package outbound_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// UpdateOutboundResourceDisplayReader is a Reader for the UpdateOutboundResourceDisplay structure.
type UpdateOutboundResourceDisplayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOutboundResourceDisplayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOutboundResourceDisplayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateOutboundResourceDisplayDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateOutboundResourceDisplayOK creates a UpdateOutboundResourceDisplayOK with default headers values
func NewUpdateOutboundResourceDisplayOK() *UpdateOutboundResourceDisplayOK {
	return &UpdateOutboundResourceDisplayOK{}
}

/*
UpdateOutboundResourceDisplayOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateOutboundResourceDisplayOK struct {
	Payload *models.EngineResourceDisplay
}

// IsSuccess returns true when this update outbound resource display Ok response has a 2xx status code
func (o *UpdateOutboundResourceDisplayOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update outbound resource display Ok response has a 3xx status code
func (o *UpdateOutboundResourceDisplayOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update outbound resource display Ok response has a 4xx status code
func (o *UpdateOutboundResourceDisplayOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update outbound resource display Ok response has a 5xx status code
func (o *UpdateOutboundResourceDisplayOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update outbound resource display Ok response a status code equal to that given
func (o *UpdateOutboundResourceDisplayOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update outbound resource display Ok response
func (o *UpdateOutboundResourceDisplayOK) Code() int {
	return 200
}

func (o *UpdateOutboundResourceDisplayOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/resources/{resource_id}/display/{id}][%d] updateOutboundResourceDisplayOk %s", 200, payload)
}

func (o *UpdateOutboundResourceDisplayOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/resources/{resource_id}/display/{id}][%d] updateOutboundResourceDisplayOk %s", 200, payload)
}

func (o *UpdateOutboundResourceDisplayOK) GetPayload() *models.EngineResourceDisplay {
	return o.Payload
}

func (o *UpdateOutboundResourceDisplayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineResourceDisplay)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOutboundResourceDisplayDefault creates a UpdateOutboundResourceDisplayDefault with default headers values
func NewUpdateOutboundResourceDisplayDefault(code int) *UpdateOutboundResourceDisplayDefault {
	return &UpdateOutboundResourceDisplayDefault{
		_statusCode: code,
	}
}

/*
UpdateOutboundResourceDisplayDefault describes a response with status code -1, with default header values.

Server error
*/
type UpdateOutboundResourceDisplayDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this update outbound resource display default response has a 2xx status code
func (o *UpdateOutboundResourceDisplayDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update outbound resource display default response has a 3xx status code
func (o *UpdateOutboundResourceDisplayDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update outbound resource display default response has a 4xx status code
func (o *UpdateOutboundResourceDisplayDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update outbound resource display default response has a 5xx status code
func (o *UpdateOutboundResourceDisplayDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update outbound resource display default response a status code equal to that given
func (o *UpdateOutboundResourceDisplayDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update outbound resource display default response
func (o *UpdateOutboundResourceDisplayDefault) Code() int {
	return o._statusCode
}

func (o *UpdateOutboundResourceDisplayDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/resources/{resource_id}/display/{id}][%d] UpdateOutboundResourceDisplay default %s", o._statusCode, payload)
}

func (o *UpdateOutboundResourceDisplayDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/resources/{resource_id}/display/{id}][%d] UpdateOutboundResourceDisplay default %s", o._statusCode, payload)
}

func (o *UpdateOutboundResourceDisplayDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *UpdateOutboundResourceDisplayDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
