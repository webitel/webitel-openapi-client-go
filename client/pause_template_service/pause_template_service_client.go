// Code generated by go-swagger; DO NOT EDIT.

package pause_template_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// New creates a new pause template service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for pause template service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	PauseTemplateServiceCreatePauseTemplate(body *models.WfmCreatePauseTemplateRequest, opts ...ClientOption) (*PauseTemplateServiceCreatePauseTemplateOK, error)
	PauseTemplateServiceCreatePauseTemplateWithParams(params *PauseTemplateServiceCreatePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceCreatePauseTemplateOK, error)

	PauseTemplateServiceDeletePauseTemplate(id string, opts ...ClientOption) (*PauseTemplateServiceDeletePauseTemplateOK, error)
	PauseTemplateServiceDeletePauseTemplateWithParams(params *PauseTemplateServiceDeletePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceDeletePauseTemplateOK, error)

	PauseTemplateServiceReadPauseTemplate(params *PauseTemplateServiceReadPauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceReadPauseTemplateOK, error)

	PauseTemplateServiceSearchPauseTemplate(params *PauseTemplateServiceSearchPauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceSearchPauseTemplateOK, error)

	PauseTemplateServiceUpdatePauseTemplate(itemID string, body *models.PauseTemplateServiceUpdatePauseTemplateParamsBody, opts ...ClientOption) (*PauseTemplateServiceUpdatePauseTemplateOK, error)
	PauseTemplateServiceUpdatePauseTemplateWithParams(params *PauseTemplateServiceUpdatePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceUpdatePauseTemplateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
PauseTemplateServiceCreatePauseTemplate pause template service create pause template API
*/
func (a *Client) PauseTemplateServiceCreatePauseTemplate(body *models.WfmCreatePauseTemplateRequest, opts ...ClientOption) (*PauseTemplateServiceCreatePauseTemplateOK, error) {
	params := NewPauseTemplateServiceCreatePauseTemplateParams().WithBody(body)
	return a.PauseTemplateServiceCreatePauseTemplateWithParams(params, opts...)
}

func (a *Client) PauseTemplateServiceCreatePauseTemplateWithParams(params *PauseTemplateServiceCreatePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceCreatePauseTemplateOK, error) {
	if params == nil {
		params = NewPauseTemplateServiceCreatePauseTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PauseTemplateService_CreatePauseTemplate",
		Method:             "POST",
		PathPattern:        "/wfm/lookups/pause_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PauseTemplateServiceCreatePauseTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PauseTemplateServiceCreatePauseTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PauseTemplateServiceCreatePauseTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PauseTemplateServiceDeletePauseTemplate pause template service delete pause template API
*/
func (a *Client) PauseTemplateServiceDeletePauseTemplate(id string, opts ...ClientOption) (*PauseTemplateServiceDeletePauseTemplateOK, error) {
	params := NewPauseTemplateServiceDeletePauseTemplateParams().WithID(id)
	return a.PauseTemplateServiceDeletePauseTemplateWithParams(params, opts...)
}

func (a *Client) PauseTemplateServiceDeletePauseTemplateWithParams(params *PauseTemplateServiceDeletePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceDeletePauseTemplateOK, error) {
	if params == nil {
		params = NewPauseTemplateServiceDeletePauseTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PauseTemplateService_DeletePauseTemplate",
		Method:             "DELETE",
		PathPattern:        "/wfm/lookups/pause_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PauseTemplateServiceDeletePauseTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PauseTemplateServiceDeletePauseTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PauseTemplateServiceDeletePauseTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PauseTemplateServiceReadPauseTemplate pause template service read pause template API
*/

func (a *Client) PauseTemplateServiceReadPauseTemplate(params *PauseTemplateServiceReadPauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceReadPauseTemplateOK, error) {
	if params == nil {
		params = NewPauseTemplateServiceReadPauseTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PauseTemplateService_ReadPauseTemplate",
		Method:             "GET",
		PathPattern:        "/wfm/lookups/pause_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PauseTemplateServiceReadPauseTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PauseTemplateServiceReadPauseTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PauseTemplateServiceReadPauseTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PauseTemplateServiceSearchPauseTemplate pause template service search pause template API
*/

func (a *Client) PauseTemplateServiceSearchPauseTemplate(params *PauseTemplateServiceSearchPauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceSearchPauseTemplateOK, error) {
	if params == nil {
		params = NewPauseTemplateServiceSearchPauseTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PauseTemplateService_SearchPauseTemplate",
		Method:             "GET",
		PathPattern:        "/wfm/lookups/pause_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PauseTemplateServiceSearchPauseTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PauseTemplateServiceSearchPauseTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PauseTemplateServiceSearchPauseTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PauseTemplateServiceUpdatePauseTemplate updates pause template cause bulk updates a pause template with a list of causes update existing cause create that not exists in database and delete that not exists in the list
*/
func (a *Client) PauseTemplateServiceUpdatePauseTemplate(itemID string, body *models.PauseTemplateServiceUpdatePauseTemplateParamsBody, opts ...ClientOption) (*PauseTemplateServiceUpdatePauseTemplateOK, error) {
	params := NewPauseTemplateServiceUpdatePauseTemplateParams().WithBody(body).WithItemID(itemID)
	return a.PauseTemplateServiceUpdatePauseTemplateWithParams(params, opts...)
}

func (a *Client) PauseTemplateServiceUpdatePauseTemplateWithParams(params *PauseTemplateServiceUpdatePauseTemplateParams, opts ...ClientOption) (*PauseTemplateServiceUpdatePauseTemplateOK, error) {
	if params == nil {
		params = NewPauseTemplateServiceUpdatePauseTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PauseTemplateService_UpdatePauseTemplate",
		Method:             "PUT",
		PathPattern:        "/wfm/lookups/pause_templates/{item.id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PauseTemplateServiceUpdatePauseTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PauseTemplateServiceUpdatePauseTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PauseTemplateServiceUpdatePauseTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
