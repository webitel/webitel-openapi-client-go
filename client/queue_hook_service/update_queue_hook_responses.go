// Code generated by go-swagger; DO NOT EDIT.

package queue_hook_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// UpdateQueueHookReader is a Reader for the UpdateQueueHook structure.
type UpdateQueueHookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateQueueHookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateQueueHookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateQueueHookDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateQueueHookOK creates a UpdateQueueHookOK with default headers values
func NewUpdateQueueHookOK() *UpdateQueueHookOK {
	return &UpdateQueueHookOK{}
}

/*
UpdateQueueHookOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateQueueHookOK struct {
	Payload *models.EngineQueueHook
}

// IsSuccess returns true when this update queue hook Ok response has a 2xx status code
func (o *UpdateQueueHookOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update queue hook Ok response has a 3xx status code
func (o *UpdateQueueHookOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update queue hook Ok response has a 4xx status code
func (o *UpdateQueueHookOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update queue hook Ok response has a 5xx status code
func (o *UpdateQueueHookOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update queue hook Ok response a status code equal to that given
func (o *UpdateQueueHookOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update queue hook Ok response
func (o *UpdateQueueHookOK) Code() int {
	return 200
}

func (o *UpdateQueueHookOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/hooks/{id}][%d] updateQueueHookOk %s", 200, payload)
}

func (o *UpdateQueueHookOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/hooks/{id}][%d] updateQueueHookOk %s", 200, payload)
}

func (o *UpdateQueueHookOK) GetPayload() *models.EngineQueueHook {
	return o.Payload
}

func (o *UpdateQueueHookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineQueueHook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQueueHookDefault creates a UpdateQueueHookDefault with default headers values
func NewUpdateQueueHookDefault(code int) *UpdateQueueHookDefault {
	return &UpdateQueueHookDefault{
		_statusCode: code,
	}
}

/*
UpdateQueueHookDefault describes a response with status code -1, with default header values.

Server error
*/
type UpdateQueueHookDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this update queue hook default response has a 2xx status code
func (o *UpdateQueueHookDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update queue hook default response has a 3xx status code
func (o *UpdateQueueHookDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update queue hook default response has a 4xx status code
func (o *UpdateQueueHookDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update queue hook default response has a 5xx status code
func (o *UpdateQueueHookDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update queue hook default response a status code equal to that given
func (o *UpdateQueueHookDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update queue hook default response
func (o *UpdateQueueHookDefault) Code() int {
	return o._statusCode
}

func (o *UpdateQueueHookDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/hooks/{id}][%d] UpdateQueueHook default %s", o._statusCode, payload)
}

func (o *UpdateQueueHookDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/hooks/{id}][%d] UpdateQueueHook default %s", o._statusCode, payload)
}

func (o *UpdateQueueHookDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *UpdateQueueHookDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
