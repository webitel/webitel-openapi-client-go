// Code generated by go-swagger; DO NOT EDIT.

package routing_outbound_call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// PatchRoutingOutboundCallReader is a Reader for the PatchRoutingOutboundCall structure.
type PatchRoutingOutboundCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchRoutingOutboundCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchRoutingOutboundCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchRoutingOutboundCallDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchRoutingOutboundCallOK creates a PatchRoutingOutboundCallOK with default headers values
func NewPatchRoutingOutboundCallOK() *PatchRoutingOutboundCallOK {
	return &PatchRoutingOutboundCallOK{}
}

/*
PatchRoutingOutboundCallOK describes a response with status code 200, with default header values.

A successful response.
*/
type PatchRoutingOutboundCallOK struct {
	Payload *models.EngineRoutingOutboundCall
}

// IsSuccess returns true when this patch routing outbound call Ok response has a 2xx status code
func (o *PatchRoutingOutboundCallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch routing outbound call Ok response has a 3xx status code
func (o *PatchRoutingOutboundCallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch routing outbound call Ok response has a 4xx status code
func (o *PatchRoutingOutboundCallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch routing outbound call Ok response has a 5xx status code
func (o *PatchRoutingOutboundCallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch routing outbound call Ok response a status code equal to that given
func (o *PatchRoutingOutboundCallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch routing outbound call Ok response
func (o *PatchRoutingOutboundCallOK) Code() int {
	return 200
}

func (o *PatchRoutingOutboundCallOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{id}][%d] patchRoutingOutboundCallOk %s", 200, payload)
}

func (o *PatchRoutingOutboundCallOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{id}][%d] patchRoutingOutboundCallOk %s", 200, payload)
}

func (o *PatchRoutingOutboundCallOK) GetPayload() *models.EngineRoutingOutboundCall {
	return o.Payload
}

func (o *PatchRoutingOutboundCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineRoutingOutboundCall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchRoutingOutboundCallDefault creates a PatchRoutingOutboundCallDefault with default headers values
func NewPatchRoutingOutboundCallDefault(code int) *PatchRoutingOutboundCallDefault {
	return &PatchRoutingOutboundCallDefault{
		_statusCode: code,
	}
}

/*
PatchRoutingOutboundCallDefault describes a response with status code -1, with default header values.

Server error
*/
type PatchRoutingOutboundCallDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this patch routing outbound call default response has a 2xx status code
func (o *PatchRoutingOutboundCallDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch routing outbound call default response has a 3xx status code
func (o *PatchRoutingOutboundCallDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch routing outbound call default response has a 4xx status code
func (o *PatchRoutingOutboundCallDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch routing outbound call default response has a 5xx status code
func (o *PatchRoutingOutboundCallDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch routing outbound call default response a status code equal to that given
func (o *PatchRoutingOutboundCallDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the patch routing outbound call default response
func (o *PatchRoutingOutboundCallDefault) Code() int {
	return o._statusCode
}

func (o *PatchRoutingOutboundCallDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{id}][%d] PatchRoutingOutboundCall default %s", o._statusCode, payload)
}

func (o *PatchRoutingOutboundCallDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{id}][%d] PatchRoutingOutboundCall default %s", o._statusCode, payload)
}

func (o *PatchRoutingOutboundCallDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *PatchRoutingOutboundCallDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
