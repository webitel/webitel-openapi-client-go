// Code generated by go-swagger; DO NOT EDIT.

package schema_version_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// SearchSchemaVersionReader is a Reader for the SearchSchemaVersion structure.
type SearchSchemaVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchSchemaVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchSchemaVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSearchSchemaVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchSchemaVersionOK creates a SearchSchemaVersionOK with default headers values
func NewSearchSchemaVersionOK() *SearchSchemaVersionOK {
	return &SearchSchemaVersionOK{}
}

/*
SearchSchemaVersionOK describes a response with status code 200, with default header values.

A successful response.
*/
type SearchSchemaVersionOK struct {
	Payload *models.EngineSearchSchemaVersionResponse
}

// IsSuccess returns true when this search schema version Ok response has a 2xx status code
func (o *SearchSchemaVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search schema version Ok response has a 3xx status code
func (o *SearchSchemaVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search schema version Ok response has a 4xx status code
func (o *SearchSchemaVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search schema version Ok response has a 5xx status code
func (o *SearchSchemaVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search schema version Ok response a status code equal to that given
func (o *SearchSchemaVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search schema version Ok response
func (o *SearchSchemaVersionOK) Code() int {
	return 200
}

func (o *SearchSchemaVersionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routing/schema/{schema_id}/versions][%d] searchSchemaVersionOk %s", 200, payload)
}

func (o *SearchSchemaVersionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routing/schema/{schema_id}/versions][%d] searchSchemaVersionOk %s", 200, payload)
}

func (o *SearchSchemaVersionOK) GetPayload() *models.EngineSearchSchemaVersionResponse {
	return o.Payload
}

func (o *SearchSchemaVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineSearchSchemaVersionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSchemaVersionDefault creates a SearchSchemaVersionDefault with default headers values
func NewSearchSchemaVersionDefault(code int) *SearchSchemaVersionDefault {
	return &SearchSchemaVersionDefault{
		_statusCode: code,
	}
}

/*
SearchSchemaVersionDefault describes a response with status code -1, with default header values.

Server error
*/
type SearchSchemaVersionDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this search schema version default response has a 2xx status code
func (o *SearchSchemaVersionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this search schema version default response has a 3xx status code
func (o *SearchSchemaVersionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this search schema version default response has a 4xx status code
func (o *SearchSchemaVersionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this search schema version default response has a 5xx status code
func (o *SearchSchemaVersionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this search schema version default response a status code equal to that given
func (o *SearchSchemaVersionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the search schema version default response
func (o *SearchSchemaVersionDefault) Code() int {
	return o._statusCode
}

func (o *SearchSchemaVersionDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routing/schema/{schema_id}/versions][%d] SearchSchemaVersion default %s", o._statusCode, payload)
}

func (o *SearchSchemaVersionDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routing/schema/{schema_id}/versions][%d] SearchSchemaVersion default %s", o._statusCode, payload)
}

func (o *SearchSchemaVersionDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *SearchSchemaVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
