// Code generated by go-swagger; DO NOT EDIT.

package shift_template_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// New creates a new shift template service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for shift template service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	ShiftTemplateServiceCreateShiftTemplate(body *models.WfmCreateShiftTemplateRequest, opts ...ClientOption) (*ShiftTemplateServiceCreateShiftTemplateOK, error)
	ShiftTemplateServiceCreateShiftTemplateWithParams(params *ShiftTemplateServiceCreateShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceCreateShiftTemplateOK, error)

	ShiftTemplateServiceDeleteShiftTemplate(id string, opts ...ClientOption) (*ShiftTemplateServiceDeleteShiftTemplateOK, error)
	ShiftTemplateServiceDeleteShiftTemplateWithParams(params *ShiftTemplateServiceDeleteShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceDeleteShiftTemplateOK, error)

	ShiftTemplateServiceReadShiftTemplate(params *ShiftTemplateServiceReadShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceReadShiftTemplateOK, error)

	ShiftTemplateServiceSearchShiftTemplate(params *ShiftTemplateServiceSearchShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceSearchShiftTemplateOK, error)

	ShiftTemplateServiceUpdateShiftTemplate(itemID string, body *models.ShiftTemplateServiceUpdateShiftTemplateParamsBody, opts ...ClientOption) (*ShiftTemplateServiceUpdateShiftTemplateOK, error)
	ShiftTemplateServiceUpdateShiftTemplateWithParams(params *ShiftTemplateServiceUpdateShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceUpdateShiftTemplateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
ShiftTemplateServiceCreateShiftTemplate shift template service create shift template API
*/
func (a *Client) ShiftTemplateServiceCreateShiftTemplate(body *models.WfmCreateShiftTemplateRequest, opts ...ClientOption) (*ShiftTemplateServiceCreateShiftTemplateOK, error) {
	params := NewShiftTemplateServiceCreateShiftTemplateParams().WithBody(body)
	return a.ShiftTemplateServiceCreateShiftTemplateWithParams(params, opts...)
}

func (a *Client) ShiftTemplateServiceCreateShiftTemplateWithParams(params *ShiftTemplateServiceCreateShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceCreateShiftTemplateOK, error) {
	if params == nil {
		params = NewShiftTemplateServiceCreateShiftTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ShiftTemplateService_CreateShiftTemplate",
		Method:             "POST",
		PathPattern:        "/wfm/lookups/shift_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShiftTemplateServiceCreateShiftTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ShiftTemplateServiceCreateShiftTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ShiftTemplateServiceCreateShiftTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ShiftTemplateServiceDeleteShiftTemplate shift template service delete shift template API
*/
func (a *Client) ShiftTemplateServiceDeleteShiftTemplate(id string, opts ...ClientOption) (*ShiftTemplateServiceDeleteShiftTemplateOK, error) {
	params := NewShiftTemplateServiceDeleteShiftTemplateParams().WithID(id)
	return a.ShiftTemplateServiceDeleteShiftTemplateWithParams(params, opts...)
}

func (a *Client) ShiftTemplateServiceDeleteShiftTemplateWithParams(params *ShiftTemplateServiceDeleteShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceDeleteShiftTemplateOK, error) {
	if params == nil {
		params = NewShiftTemplateServiceDeleteShiftTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ShiftTemplateService_DeleteShiftTemplate",
		Method:             "DELETE",
		PathPattern:        "/wfm/lookups/shift_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShiftTemplateServiceDeleteShiftTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ShiftTemplateServiceDeleteShiftTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ShiftTemplateServiceDeleteShiftTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ShiftTemplateServiceReadShiftTemplate shift template service read shift template API
*/

func (a *Client) ShiftTemplateServiceReadShiftTemplate(params *ShiftTemplateServiceReadShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceReadShiftTemplateOK, error) {
	if params == nil {
		params = NewShiftTemplateServiceReadShiftTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ShiftTemplateService_ReadShiftTemplate",
		Method:             "GET",
		PathPattern:        "/wfm/lookups/shift_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShiftTemplateServiceReadShiftTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ShiftTemplateServiceReadShiftTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ShiftTemplateServiceReadShiftTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ShiftTemplateServiceSearchShiftTemplate shift template service search shift template API
*/

func (a *Client) ShiftTemplateServiceSearchShiftTemplate(params *ShiftTemplateServiceSearchShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceSearchShiftTemplateOK, error) {
	if params == nil {
		params = NewShiftTemplateServiceSearchShiftTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ShiftTemplateService_SearchShiftTemplate",
		Method:             "GET",
		PathPattern:        "/wfm/lookups/shift_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShiftTemplateServiceSearchShiftTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ShiftTemplateServiceSearchShiftTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ShiftTemplateServiceSearchShiftTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ShiftTemplateServiceUpdateShiftTemplate updates shift template updates a shift template with a list times update existing time create that not exists in database and delete that not exists in the list
*/
func (a *Client) ShiftTemplateServiceUpdateShiftTemplate(itemID string, body *models.ShiftTemplateServiceUpdateShiftTemplateParamsBody, opts ...ClientOption) (*ShiftTemplateServiceUpdateShiftTemplateOK, error) {
	params := NewShiftTemplateServiceUpdateShiftTemplateParams().WithBody(body).WithItemID(itemID)
	return a.ShiftTemplateServiceUpdateShiftTemplateWithParams(params, opts...)
}

func (a *Client) ShiftTemplateServiceUpdateShiftTemplateWithParams(params *ShiftTemplateServiceUpdateShiftTemplateParams, opts ...ClientOption) (*ShiftTemplateServiceUpdateShiftTemplateOK, error) {
	if params == nil {
		params = NewShiftTemplateServiceUpdateShiftTemplateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ShiftTemplateService_UpdateShiftTemplate",
		Method:             "PUT",
		PathPattern:        "/wfm/lookups/shift_templates/{item.id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ShiftTemplateServiceUpdateShiftTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ShiftTemplateServiceUpdateShiftTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ShiftTemplateServiceUpdateShiftTemplateDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
