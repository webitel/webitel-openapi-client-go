// Code generated by go-swagger; DO NOT EDIT.

package team_trigger_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/models"
)

// PatchTeamTriggerReader is a Reader for the PatchTeamTrigger structure.
type PatchTeamTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchTeamTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchTeamTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchTeamTriggerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchTeamTriggerOK creates a PatchTeamTriggerOK with default headers values
func NewPatchTeamTriggerOK() *PatchTeamTriggerOK {
	return &PatchTeamTriggerOK{}
}

/*
PatchTeamTriggerOK describes a response with status code 200, with default header values.

A successful response.
*/
type PatchTeamTriggerOK struct {
	Payload *models.EngineTeamTrigger
}

// IsSuccess returns true when this patch team trigger Ok response has a 2xx status code
func (o *PatchTeamTriggerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch team trigger Ok response has a 3xx status code
func (o *PatchTeamTriggerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch team trigger Ok response has a 4xx status code
func (o *PatchTeamTriggerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch team trigger Ok response has a 5xx status code
func (o *PatchTeamTriggerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch team trigger Ok response a status code equal to that given
func (o *PatchTeamTriggerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch team trigger Ok response
func (o *PatchTeamTriggerOK) Code() int {
	return 200
}

func (o *PatchTeamTriggerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/teams/{team_id}/triggers/{id}][%d] patchTeamTriggerOk %s", 200, payload)
}

func (o *PatchTeamTriggerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/teams/{team_id}/triggers/{id}][%d] patchTeamTriggerOk %s", 200, payload)
}

func (o *PatchTeamTriggerOK) GetPayload() *models.EngineTeamTrigger {
	return o.Payload
}

func (o *PatchTeamTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineTeamTrigger)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTeamTriggerDefault creates a PatchTeamTriggerDefault with default headers values
func NewPatchTeamTriggerDefault(code int) *PatchTeamTriggerDefault {
	return &PatchTeamTriggerDefault{
		_statusCode: code,
	}
}

/*
PatchTeamTriggerDefault describes a response with status code -1, with default header values.

Server error
*/
type PatchTeamTriggerDefault struct {
	_statusCode int

	Payload *models.EngineAPIError
}

// IsSuccess returns true when this patch team trigger default response has a 2xx status code
func (o *PatchTeamTriggerDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch team trigger default response has a 3xx status code
func (o *PatchTeamTriggerDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch team trigger default response has a 4xx status code
func (o *PatchTeamTriggerDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch team trigger default response has a 5xx status code
func (o *PatchTeamTriggerDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch team trigger default response a status code equal to that given
func (o *PatchTeamTriggerDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the patch team trigger default response
func (o *PatchTeamTriggerDefault) Code() int {
	return o._statusCode
}

func (o *PatchTeamTriggerDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/teams/{team_id}/triggers/{id}][%d] PatchTeamTrigger default %s", o._statusCode, payload)
}

func (o *PatchTeamTriggerDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /call_center/teams/{team_id}/triggers/{id}][%d] PatchTeamTrigger default %s", o._statusCode, payload)
}

func (o *PatchTeamTriggerDefault) GetPayload() *models.EngineAPIError {
	return o.Payload
}

func (o *PatchTeamTriggerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
