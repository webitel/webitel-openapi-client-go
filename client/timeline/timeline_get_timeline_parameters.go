// Code generated by go-swagger; DO NOT EDIT.

package timeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTimelineGetTimelineParams creates a new TimelineGetTimelineParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewTimelineGetTimelineParams() *TimelineGetTimelineParams {
	return &TimelineGetTimelineParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewTimelineGetTimelineParamsWithTimeout creates a new TimelineGetTimelineParams object
// with the ability to set a timeout on a request.
func NewTimelineGetTimelineParamsWithTimeout(timeout time.Duration) *TimelineGetTimelineParams {
	return &TimelineGetTimelineParams{
		timeout: timeout,
	}
}

// NewTimelineGetTimelineParamsWithContext creates a new TimelineGetTimelineParams object
// with the ability to set a context for a request.
func NewTimelineGetTimelineParamsWithContext(ctx context.Context) *TimelineGetTimelineParams {
	return &TimelineGetTimelineParams{
		Context: ctx,
	}
}

// NewTimelineGetTimelineParamsWithHTTPClient creates a new TimelineGetTimelineParams object
// with the ability to set a custom HTTPClient for a request.
func NewTimelineGetTimelineParamsWithHTTPClient(client *http.Client) *TimelineGetTimelineParams {
	return &TimelineGetTimelineParams{
		HTTPClient: client,
	}
}

/*
TimelineGetTimelineParams contains all the parameters to send to the API endpoint

	for the timeline get timeline operation.

	Typically these are written to a http.Request.
*/
type TimelineGetTimelineParams struct {

	// ContactID.
	ContactID string

	// DateFrom.
	//
	// Format: int64
	DateFrom *string

	// DateTo.
	//
	// Format: int64
	DateTo *string

	// Fields.
	Fields []string

	// Ids.
	Ids []string

	// Page.
	//
	// Format: int64
	Page *string

	// Search.
	Search *string

	// Size.
	//
	// Format: int64
	Size *string

	// Sort.
	Sort *string

	// Type.
	Type []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the timeline get timeline params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TimelineGetTimelineParams) WithDefaults() *TimelineGetTimelineParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the timeline get timeline params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TimelineGetTimelineParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithTimeout(timeout time.Duration) *TimelineGetTimelineParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithContext(ctx context.Context) *TimelineGetTimelineParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithHTTPClient(client *http.Client) *TimelineGetTimelineParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContactID adds the contactID to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithContactID(contactID string) *TimelineGetTimelineParams {
	o.SetContactID(contactID)
	return o
}

// SetContactID adds the contactId to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetContactID(contactID string) {
	o.ContactID = contactID
}

// WithDateFrom adds the dateFrom to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithDateFrom(dateFrom *string) *TimelineGetTimelineParams {
	o.SetDateFrom(dateFrom)
	return o
}

// SetDateFrom adds the dateFrom to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetDateFrom(dateFrom *string) {
	o.DateFrom = dateFrom
}

// WithDateTo adds the dateTo to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithDateTo(dateTo *string) *TimelineGetTimelineParams {
	o.SetDateTo(dateTo)
	return o
}

// SetDateTo adds the dateTo to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetDateTo(dateTo *string) {
	o.DateTo = dateTo
}

// WithFields adds the fields to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithFields(fields []string) *TimelineGetTimelineParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithIds adds the ids to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithIds(ids []string) *TimelineGetTimelineParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithPage adds the page to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithPage(page *string) *TimelineGetTimelineParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetPage(page *string) {
	o.Page = page
}

// WithSearch adds the search to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithSearch(search *string) *TimelineGetTimelineParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetSearch(search *string) {
	o.Search = search
}

// WithSize adds the size to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithSize(size *string) *TimelineGetTimelineParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetSize(size *string) {
	o.Size = size
}

// WithSort adds the sort to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithSort(sort *string) *TimelineGetTimelineParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithType adds the typeVar to the timeline get timeline params
func (o *TimelineGetTimelineParams) WithType(typeVar []string) *TimelineGetTimelineParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the timeline get timeline params
func (o *TimelineGetTimelineParams) SetType(typeVar []string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *TimelineGetTimelineParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param contact_id
	if err := r.SetPathParam("contact_id", o.ContactID); err != nil {
		return err
	}

	if o.DateFrom != nil {

		// query param date_from
		var qrDateFrom string

		if o.DateFrom != nil {
			qrDateFrom = *o.DateFrom
		}
		qDateFrom := qrDateFrom
		if qDateFrom != "" {

			if err := r.SetQueryParam("date_from", qDateFrom); err != nil {
				return err
			}
		}
	}

	if o.DateTo != nil {

		// query param date_to
		var qrDateTo string

		if o.DateTo != nil {
			qrDateTo = *o.DateTo
		}
		qDateTo := qrDateTo
		if qDateTo != "" {

			if err := r.SetQueryParam("date_to", qDateTo); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Search != nil {

		// query param search
		var qrSearch string

		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {

			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize string

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := qrSize
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.Type != nil {

		// binding items for type
		joinedType := o.bindParamType(reg)

		// query array param type
		if err := r.SetQueryParam("type", joinedType...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamTimelineGetTimeline binds the parameter fields
func (o *TimelineGetTimelineParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "multi"
	fieldsIS := swag.JoinByFormat(fieldsIC, "multi")

	return fieldsIS
}

// bindParamTimelineGetTimeline binds the parameter ids
func (o *TimelineGetTimelineParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "multi"
	idsIS := swag.JoinByFormat(idsIC, "multi")

	return idsIS
}

// bindParamTimelineGetTimeline binds the parameter type
func (o *TimelineGetTimelineParams) bindParamType(formats strfmt.Registry) []string {
	typeIR := o.Type

	var typeIC []string
	for _, typeIIR := range typeIR { // explode []string

		typeIIV := typeIIR // string as string
		typeIC = append(typeIC, typeIIV)
	}

	// items.CollectionFormat: "multi"
	typeIS := swag.JoinByFormat(typeIC, "multi")

	return typeIS
}
