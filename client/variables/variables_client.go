// Code generated by go-swagger; DO NOT EDIT.

package variables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new variables API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for variables API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	VariablesDeleteVariable(params *VariablesDeleteVariableParams, opts ...ClientOption) (*VariablesDeleteVariableOK, error)

	VariablesDeleteVariables(params *VariablesDeleteVariablesParams, opts ...ClientOption) (*VariablesDeleteVariablesOK, error)

	VariablesListVariables(params *VariablesListVariablesParams, opts ...ClientOption) (*VariablesListVariablesOK, error)

	VariablesMergeVariables(params *VariablesMergeVariablesParams, opts ...ClientOption) (*VariablesMergeVariablesOK, error)

	VariablesResetVariables(params *VariablesResetVariablesParams, opts ...ClientOption) (*VariablesResetVariablesOK, error)

	VariablesUpdateVariable(params *VariablesUpdateVariableParams, opts ...ClientOption) (*VariablesUpdateVariableOK, error)

	VariablesUpdateVariable2(params *VariablesUpdateVariable2Params, opts ...ClientOption) (*VariablesUpdateVariable2OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
VariablesDeleteVariable removes the contact s variable by etag
*/

func (a *Client) VariablesDeleteVariable(params *VariablesDeleteVariableParams, opts ...ClientOption) (*VariablesDeleteVariableOK, error) {
	if params == nil {
		params = NewVariablesDeleteVariableParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_DeleteVariable",
		Method:             "DELETE",
		PathPattern:        "/contacts/{contact_id}/variables/{etag}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesDeleteVariableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesDeleteVariableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_DeleteVariable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesDeleteVariables removes variable s of the contact
*/

func (a *Client) VariablesDeleteVariables(params *VariablesDeleteVariablesParams, opts ...ClientOption) (*VariablesDeleteVariablesOK, error) {
	if params == nil {
		params = NewVariablesDeleteVariablesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_DeleteVariables",
		Method:             "DELETE",
		PathPattern:        "/contacts/{contact_id}/variables",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesDeleteVariablesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesDeleteVariablesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_DeleteVariables: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesListVariables lists variables of the contact
*/

func (a *Client) VariablesListVariables(params *VariablesListVariablesParams, opts ...ClientOption) (*VariablesListVariablesOK, error) {
	if params == nil {
		params = NewVariablesListVariablesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_ListVariables",
		Method:             "GET",
		PathPattern:        "/contacts/{contact_id}/variables",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesListVariablesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesListVariablesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_ListVariables: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesMergeVariables updates or append variables to the contact
*/

func (a *Client) VariablesMergeVariables(params *VariablesMergeVariablesParams, opts ...ClientOption) (*VariablesMergeVariablesOK, error) {
	if params == nil {
		params = NewVariablesMergeVariablesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_MergeVariables",
		Method:             "POST",
		PathPattern:        "/contacts/{contact_id}/variables",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesMergeVariablesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesMergeVariablesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_MergeVariables: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesResetVariables resets all variables of the contact
*/

func (a *Client) VariablesResetVariables(params *VariablesResetVariablesParams, opts ...ClientOption) (*VariablesResetVariablesOK, error) {
	if params == nil {
		params = NewVariablesResetVariablesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_ResetVariables",
		Method:             "PUT",
		PathPattern:        "/contacts/{contact_id}/variables",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesResetVariablesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesResetVariablesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_ResetVariables: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesUpdateVariable updates contact variable
*/

func (a *Client) VariablesUpdateVariable(params *VariablesUpdateVariableParams, opts ...ClientOption) (*VariablesUpdateVariableOK, error) {
	if params == nil {
		params = NewVariablesUpdateVariableParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_UpdateVariable",
		Method:             "PUT",
		PathPattern:        "/contacts/{contact_id}/variables/{etag}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesUpdateVariableReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesUpdateVariableOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_UpdateVariable: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
VariablesUpdateVariable2 updates contact variable
*/

func (a *Client) VariablesUpdateVariable2(params *VariablesUpdateVariable2Params, opts ...ClientOption) (*VariablesUpdateVariable2OK, error) {
	if params == nil {
		params = NewVariablesUpdateVariable2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "Variables_UpdateVariable2",
		Method:             "PATCH",
		PathPattern:        "/contacts/{contact_id}/variables/{etag}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &VariablesUpdateVariable2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		if opt != nil {
			opt(op)
		}
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*VariablesUpdateVariable2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Variables_UpdateVariable2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// WithAuthInfo changes the transport on the client
func WithAuthInfo(authInfo runtime.ClientAuthInfoWriter) ClientOption {
	return func(op *runtime.ClientOperation) {
		op.AuthInfo = authInfo
	}
}
