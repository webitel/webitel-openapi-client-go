// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command
// To edit this file, edit the custom template in templates/clientFacade.gotmpl
// More info on custom templates can be found in the README or here: https://github.com/go-swagger/go-swagger/blob/master/docs/generate/templates.md
// The template itself can be found here: https://github.com/go-swagger/go-swagger/blob/master/generator/templates/client/facade.gotmpl

import (
	"crypto/tls"
	"encoding/json"
	"io"
	"net/http"
	"time"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/webitel-openapi-client-go/transport"

	"github.com/webitel/webitel-openapi-client-go/client/access_store"
	"github.com/webitel/webitel-openapi-client-go/client/agent_absence_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_chats_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_pause_cause_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_skill_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_team_service"
	"github.com/webitel/webitel-openapi-client-go/client/agent_working_conditions_service"
	"github.com/webitel/webitel-openapi-client-go/client/audit_form_service"
	"github.com/webitel/webitel-openapi-client-go/client/auth"
	"github.com/webitel/webitel-openapi-client-go/client/backend_profile_service"
	"github.com/webitel/webitel-openapi-client-go/client/bucket_service"
	"github.com/webitel/webitel-openapi-client-go/client/calendar_service"
	"github.com/webitel/webitel-openapi-client-go/client/call_service"
	"github.com/webitel/webitel-openapi-client-go/client/catalog"
	"github.com/webitel/webitel-openapi-client-go/client/chat_helper_service"
	"github.com/webitel/webitel-openapi-client-go/client/classes"
	"github.com/webitel/webitel-openapi-client-go/client/cognitive_profile_service"
	"github.com/webitel/webitel-openapi-client-go/client/communication_type_service"
	"github.com/webitel/webitel-openapi-client-go/client/config_service"
	"github.com/webitel/webitel-openapi-client-go/client/contact_groups"
	"github.com/webitel/webitel-openapi-client-go/client/contact_linking_service"
	"github.com/webitel/webitel-openapi-client-go/client/contacts"
	"github.com/webitel/webitel-openapi-client-go/client/contacts_chat_catalog"
	"github.com/webitel/webitel-openapi-client-go/client/customers"
	"github.com/webitel/webitel-openapi-client-go/client/devices"
	"github.com/webitel/webitel-openapi-client-go/client/domains"
	"github.com/webitel/webitel-openapi-client-go/client/email_profile_service"
	"github.com/webitel/webitel-openapi-client-go/client/emails"
	"github.com/webitel/webitel-openapi-client-go/client/file_service"
	"github.com/webitel/webitel-openapi-client-go/client/file_transcript_service"
	"github.com/webitel/webitel-openapi-client-go/client/forecast_calculation_service"
	"github.com/webitel/webitel-openapi-client-go/client/groups"
	"github.com/webitel/webitel-openapi-client-go/client/i_m_clients"
	"github.com/webitel/webitel-openapi-client-go/client/import_template_service"
	"github.com/webitel/webitel-openapi-client-go/client/labels"
	"github.com/webitel/webitel-openapi-client-go/client/ldap"
	"github.com/webitel/webitel-openapi-client-go/client/list_service"
	"github.com/webitel/webitel-openapi-client-go/client/logger_service"
	"github.com/webitel/webitel-openapi-client-go/client/managers"
	"github.com/webitel/webitel-openapi-client-go/client/media_file_service"
	"github.com/webitel/webitel-openapi-client-go/client/member_service"
	"github.com/webitel/webitel-openapi-client-go/client/o_auth2_federation"
	"github.com/webitel/webitel-openapi-client-go/client/outbound_resource_group_service"
	"github.com/webitel/webitel-openapi-client-go/client/outbound_resource_service"
	"github.com/webitel/webitel-openapi-client-go/client/pause_template_service"
	"github.com/webitel/webitel-openapi-client-go/client/permissions"
	"github.com/webitel/webitel-openapi-client-go/client/phones"
	"github.com/webitel/webitel-openapi-client-go/client/presence"
	"github.com/webitel/webitel-openapi-client-go/client/preset_query_service"
	"github.com/webitel/webitel-openapi-client-go/client/queue_bucket_service"
	"github.com/webitel/webitel-openapi-client-go/client/queue_hook_service"
	"github.com/webitel/webitel-openapi-client-go/client/queue_resources_service"
	"github.com/webitel/webitel-openapi-client-go/client/queue_service"
	"github.com/webitel/webitel-openapi-client-go/client/queue_skill_service"
	"github.com/webitel/webitel-openapi-client-go/client/region_service"
	"github.com/webitel/webitel-openapi-client-go/client/roles"
	"github.com/webitel/webitel-openapi-client-go/client/routing_chat_plan_service"
	"github.com/webitel/webitel-openapi-client-go/client/routing_outbound_call_service"
	"github.com/webitel/webitel-openapi-client-go/client/routing_schema_service"
	"github.com/webitel/webitel-openapi-client-go/client/routing_variable_service"
	"github.com/webitel/webitel-openapi-client-go/client/schema_variables_service"
	"github.com/webitel/webitel-openapi-client-go/client/schema_version_service"
	"github.com/webitel/webitel-openapi-client-go/client/shift_template_service"
	"github.com/webitel/webitel-openapi-client-go/client/skill_service"
	"github.com/webitel/webitel-openapi-client-go/client/system_setting_service"
	"github.com/webitel/webitel-openapi-client-go/client/team_hook_service"
	"github.com/webitel/webitel-openapi-client-go/client/team_trigger_service"
	"github.com/webitel/webitel-openapi-client-go/client/timeline"
	"github.com/webitel/webitel-openapi-client-go/client/timezones"
	"github.com/webitel/webitel-openapi-client-go/client/trigger_service"
	"github.com/webitel/webitel-openapi-client-go/client/two_factor_authentication"
	"github.com/webitel/webitel-openapi-client-go/client/user_access_tokens"
	"github.com/webitel/webitel-openapi-client-go/client/user_helper_service"
	"github.com/webitel/webitel-openapi-client-go/client/user_settings"
	"github.com/webitel/webitel-openapi-client-go/client/users"
	"github.com/webitel/webitel-openapi-client-go/client/variables"
	"github.com/webitel/webitel-openapi-client-go/client/web_hook_service"
	"github.com/webitel/webitel-openapi-client-go/client/working_condition_service"
)

// Default webitel API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "dev.webitel.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new webitel API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *WebitelAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new webitel API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *WebitelAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := newTransportWithConfig(cfg)

	return New(transport, cfg, formats)
}

// New creates a new webitel API client
func New(transport runtime.ClientTransport, cfg *TransportConfig, formats strfmt.Registry) *WebitelAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(WebitelAPI)
	cli.cfg = cfg
	cli.Transport = transport
	cli.formats = formats
	cli.AccessStore = access_store.New(transport, formats)
	cli.AgentAbsenceService = agent_absence_service.New(transport, formats)
	cli.AgentChatsService = agent_chats_service.New(transport, formats)
	cli.AgentPauseCauseService = agent_pause_cause_service.New(transport, formats)
	cli.AgentService = agent_service.New(transport, formats)
	cli.AgentSkillService = agent_skill_service.New(transport, formats)
	cli.AgentTeamService = agent_team_service.New(transport, formats)
	cli.AgentWorkingConditionsService = agent_working_conditions_service.New(transport, formats)
	cli.AuditFormService = audit_form_service.New(transport, formats)
	cli.Auth = auth.New(transport, formats)
	cli.BackendProfileService = backend_profile_service.New(transport, formats)
	cli.BucketService = bucket_service.New(transport, formats)
	cli.CalendarService = calendar_service.New(transport, formats)
	cli.CallService = call_service.New(transport, formats)
	cli.Catalog = catalog.New(transport, formats)
	cli.ChatHelperService = chat_helper_service.New(transport, formats)
	cli.Classes = classes.New(transport, formats)
	cli.CognitiveProfileService = cognitive_profile_service.New(transport, formats)
	cli.CommunicationTypeService = communication_type_service.New(transport, formats)
	cli.ConfigService = config_service.New(transport, formats)
	cli.ContactGroups = contact_groups.New(transport, formats)
	cli.ContactLinkingService = contact_linking_service.New(transport, formats)
	cli.Contacts = contacts.New(transport, formats)
	cli.ContactsChatCatalog = contacts_chat_catalog.New(transport, formats)
	cli.Customers = customers.New(transport, formats)
	cli.Devices = devices.New(transport, formats)
	cli.Domains = domains.New(transport, formats)
	cli.EmailProfileService = email_profile_service.New(transport, formats)
	cli.Emails = emails.New(transport, formats)
	cli.FileService = file_service.New(transport, formats)
	cli.FileTranscriptService = file_transcript_service.New(transport, formats)
	cli.ForecastCalculationService = forecast_calculation_service.New(transport, formats)
	cli.Groups = groups.New(transport, formats)
	cli.ImClients = i_m_clients.New(transport, formats)
	cli.ImportTemplateService = import_template_service.New(transport, formats)
	cli.Labels = labels.New(transport, formats)
	cli.LDAP = ldap.New(transport, formats)
	cli.ListService = list_service.New(transport, formats)
	cli.LoggerService = logger_service.New(transport, formats)
	cli.Managers = managers.New(transport, formats)
	cli.MediaFileService = media_file_service.New(transport, formats)
	cli.MemberService = member_service.New(transport, formats)
	cli.OAuth2Federation = o_auth2_federation.New(transport, formats)
	cli.OutboundResourceGroupService = outbound_resource_group_service.New(transport, formats)
	cli.OutboundResourceService = outbound_resource_service.New(transport, formats)
	cli.PauseTemplateService = pause_template_service.New(transport, formats)
	cli.Permissions = permissions.New(transport, formats)
	cli.Phones = phones.New(transport, formats)
	cli.Presence = presence.New(transport, formats)
	cli.PresetQueryService = preset_query_service.New(transport, formats)
	cli.QueueBucketService = queue_bucket_service.New(transport, formats)
	cli.QueueHookService = queue_hook_service.New(transport, formats)
	cli.QueueResourcesService = queue_resources_service.New(transport, formats)
	cli.QueueService = queue_service.New(transport, formats)
	cli.QueueSkillService = queue_skill_service.New(transport, formats)
	cli.RegionService = region_service.New(transport, formats)
	cli.Roles = roles.New(transport, formats)
	cli.RoutingChatPlanService = routing_chat_plan_service.New(transport, formats)
	cli.RoutingOutboundCallService = routing_outbound_call_service.New(transport, formats)
	cli.RoutingSchemaService = routing_schema_service.New(transport, formats)
	cli.RoutingVariableService = routing_variable_service.New(transport, formats)
	cli.SchemaVariablesService = schema_variables_service.New(transport, formats)
	cli.SchemaVersionService = schema_version_service.New(transport, formats)
	cli.ShiftTemplateService = shift_template_service.New(transport, formats)
	cli.SkillService = skill_service.New(transport, formats)
	cli.SystemSettingService = system_setting_service.New(transport, formats)
	cli.TeamHookService = team_hook_service.New(transport, formats)
	cli.TeamTriggerService = team_trigger_service.New(transport, formats)
	cli.Timeline = timeline.New(transport, formats)
	cli.Timezones = timezones.New(transport, formats)
	cli.TriggerService = trigger_service.New(transport, formats)
	cli.TwoFactorAuthentication = two_factor_authentication.New(transport, formats)
	cli.UserAccessTokens = user_access_tokens.New(transport, formats)
	cli.UserHelperService = user_helper_service.New(transport, formats)
	cli.UserSettings = user_settings.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Variables = variables.New(transport, formats)
	cli.WebHookService = web_hook_service.New(transport, formats)
	cli.WorkingConditionService = working_condition_service.New(transport, formats)
	return cli
}

// Clone creates a clone of the webitel API client.
// This new client can then be modified independently of the original client with the With* methods.
func (c *WebitelAPI) Clone() *WebitelAPI {
	cfg := *c.cfg

	return New(c.Transport, &cfg, c.formats)
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	// Host is the doman name or IP address of the host that serves the API.
	Host string

	// BasePath is the URL prefix for all API paths, relative to the host root.
	BasePath string

	// Schemes are the transfer protocols used by the API (http or https).
	Schemes []string

	// APIKey is an optional API key or service account token.
	APIKey string

	// TLSConfig provides an optional configuration for a TLS client
	TLSConfig *tls.Config

	// NumRetries contains the optional number of attempted retries
	NumRetries int

	// RetryTimeout sets an optional time to wait before retrying a request
	RetryTimeout time.Duration

	// RetryStatusCodes contains the optional list of status codes to retry
	// Use "x" as a wildcard for a single digit (default: [429, 5xx])
	RetryStatusCodes []string

	// HTTPHeaders contains an optional map of HTTP headers to add to each request
	HTTPHeaders map[string]string

	// Debug sets the optional debug mode for the transport
	Debug bool

	// Client sets the net/http client used for the transport
	Client *http.Client
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host

	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath

	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes

	return cfg
}

// WebitelAPI is a client for webitel API
type WebitelAPI struct {
	AccessStore access_store.ClientService

	AgentAbsenceService agent_absence_service.ClientService

	AgentChatsService agent_chats_service.ClientService

	AgentPauseCauseService agent_pause_cause_service.ClientService

	AgentService agent_service.ClientService

	AgentSkillService agent_skill_service.ClientService

	AgentTeamService agent_team_service.ClientService

	AgentWorkingConditionsService agent_working_conditions_service.ClientService

	AuditFormService audit_form_service.ClientService

	Auth auth.ClientService

	BackendProfileService backend_profile_service.ClientService

	BucketService bucket_service.ClientService

	CalendarService calendar_service.ClientService

	CallService call_service.ClientService

	Catalog catalog.ClientService

	ChatHelperService chat_helper_service.ClientService

	Classes classes.ClientService

	CognitiveProfileService cognitive_profile_service.ClientService

	CommunicationTypeService communication_type_service.ClientService

	ConfigService config_service.ClientService

	ContactGroups contact_groups.ClientService

	ContactLinkingService contact_linking_service.ClientService

	Contacts contacts.ClientService

	ContactsChatCatalog contacts_chat_catalog.ClientService

	Customers customers.ClientService

	Devices devices.ClientService

	Domains domains.ClientService

	EmailProfileService email_profile_service.ClientService

	Emails emails.ClientService

	FileService file_service.ClientService

	FileTranscriptService file_transcript_service.ClientService

	ForecastCalculationService forecast_calculation_service.ClientService

	Groups groups.ClientService

	ImClients i_m_clients.ClientService

	ImportTemplateService import_template_service.ClientService

	Labels labels.ClientService

	LDAP ldap.ClientService

	ListService list_service.ClientService

	LoggerService logger_service.ClientService

	Managers managers.ClientService

	MediaFileService media_file_service.ClientService

	MemberService member_service.ClientService

	OAuth2Federation o_auth2_federation.ClientService

	OutboundResourceGroupService outbound_resource_group_service.ClientService

	OutboundResourceService outbound_resource_service.ClientService

	PauseTemplateService pause_template_service.ClientService

	Permissions permissions.ClientService

	Phones phones.ClientService

	Presence presence.ClientService

	PresetQueryService preset_query_service.ClientService

	QueueBucketService queue_bucket_service.ClientService

	QueueHookService queue_hook_service.ClientService

	QueueResourcesService queue_resources_service.ClientService

	QueueService queue_service.ClientService

	QueueSkillService queue_skill_service.ClientService

	RegionService region_service.ClientService

	Roles roles.ClientService

	RoutingChatPlanService routing_chat_plan_service.ClientService

	RoutingOutboundCallService routing_outbound_call_service.ClientService

	RoutingSchemaService routing_schema_service.ClientService

	RoutingVariableService routing_variable_service.ClientService

	SchemaVariablesService schema_variables_service.ClientService

	SchemaVersionService schema_version_service.ClientService

	ShiftTemplateService shift_template_service.ClientService

	SkillService skill_service.ClientService

	SystemSettingService system_setting_service.ClientService

	TeamHookService team_hook_service.ClientService

	TeamTriggerService team_trigger_service.ClientService

	Timeline timeline.ClientService

	Timezones timezones.ClientService

	TriggerService trigger_service.ClientService

	TwoFactorAuthentication two_factor_authentication.ClientService

	UserAccessTokens user_access_tokens.ClientService

	UserHelperService user_helper_service.ClientService

	UserSettings user_settings.ClientService

	Users users.ClientService

	Variables variables.ClientService

	WebHookService web_hook_service.ClientService

	WorkingConditionService working_condition_service.ClientService

	Transport runtime.ClientTransport
	// cfg is private because it should only be read or set (and then the transport must be created again)
	cfg     *TransportConfig
	formats strfmt.Registry
}

// SetTransport changes the transport on the client and all its subresources
func (c *WebitelAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AccessStore.SetTransport(transport)
	c.AgentAbsenceService.SetTransport(transport)
	c.AgentChatsService.SetTransport(transport)
	c.AgentPauseCauseService.SetTransport(transport)
	c.AgentService.SetTransport(transport)
	c.AgentSkillService.SetTransport(transport)
	c.AgentTeamService.SetTransport(transport)
	c.AgentWorkingConditionsService.SetTransport(transport)
	c.AuditFormService.SetTransport(transport)
	c.Auth.SetTransport(transport)
	c.BackendProfileService.SetTransport(transport)
	c.BucketService.SetTransport(transport)
	c.CalendarService.SetTransport(transport)
	c.CallService.SetTransport(transport)
	c.Catalog.SetTransport(transport)
	c.ChatHelperService.SetTransport(transport)
	c.Classes.SetTransport(transport)
	c.CognitiveProfileService.SetTransport(transport)
	c.CommunicationTypeService.SetTransport(transport)
	c.ConfigService.SetTransport(transport)
	c.ContactGroups.SetTransport(transport)
	c.ContactLinkingService.SetTransport(transport)
	c.Contacts.SetTransport(transport)
	c.ContactsChatCatalog.SetTransport(transport)
	c.Customers.SetTransport(transport)
	c.Devices.SetTransport(transport)
	c.Domains.SetTransport(transport)
	c.EmailProfileService.SetTransport(transport)
	c.Emails.SetTransport(transport)
	c.FileService.SetTransport(transport)
	c.FileTranscriptService.SetTransport(transport)
	c.ForecastCalculationService.SetTransport(transport)
	c.Groups.SetTransport(transport)
	c.ImClients.SetTransport(transport)
	c.ImportTemplateService.SetTransport(transport)
	c.Labels.SetTransport(transport)
	c.LDAP.SetTransport(transport)
	c.ListService.SetTransport(transport)
	c.LoggerService.SetTransport(transport)
	c.Managers.SetTransport(transport)
	c.MediaFileService.SetTransport(transport)
	c.MemberService.SetTransport(transport)
	c.OAuth2Federation.SetTransport(transport)
	c.OutboundResourceGroupService.SetTransport(transport)
	c.OutboundResourceService.SetTransport(transport)
	c.PauseTemplateService.SetTransport(transport)
	c.Permissions.SetTransport(transport)
	c.Phones.SetTransport(transport)
	c.Presence.SetTransport(transport)
	c.PresetQueryService.SetTransport(transport)
	c.QueueBucketService.SetTransport(transport)
	c.QueueHookService.SetTransport(transport)
	c.QueueResourcesService.SetTransport(transport)
	c.QueueService.SetTransport(transport)
	c.QueueSkillService.SetTransport(transport)
	c.RegionService.SetTransport(transport)
	c.Roles.SetTransport(transport)
	c.RoutingChatPlanService.SetTransport(transport)
	c.RoutingOutboundCallService.SetTransport(transport)
	c.RoutingSchemaService.SetTransport(transport)
	c.RoutingVariableService.SetTransport(transport)
	c.SchemaVariablesService.SetTransport(transport)
	c.SchemaVersionService.SetTransport(transport)
	c.ShiftTemplateService.SetTransport(transport)
	c.SkillService.SetTransport(transport)
	c.SystemSettingService.SetTransport(transport)
	c.TeamHookService.SetTransport(transport)
	c.TeamTriggerService.SetTransport(transport)
	c.Timeline.SetTransport(transport)
	c.Timezones.SetTransport(transport)
	c.TriggerService.SetTransport(transport)
	c.TwoFactorAuthentication.SetTransport(transport)
	c.UserAccessTokens.SetTransport(transport)
	c.UserHelperService.SetTransport(transport)
	c.UserSettings.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Variables.SetTransport(transport)
	c.WebHookService.SetTransport(transport)
	c.WorkingConditionService.SetTransport(transport)
}

// WithRetries sets retry parameters and returns the client
func (c *WebitelAPI) WithRetries(numRetries int, retryTimeout time.Duration, retryStatusCodes ...string) *WebitelAPI {
	c.cfg.NumRetries = numRetries
	c.cfg.RetryTimeout = retryTimeout
	c.cfg.RetryStatusCodes = retryStatusCodes
	c.SetTransport(newTransportWithConfig(c.cfg))

	return c
}

// WithHTTPClient sets the used net/http client and returns the API client
func (c *WebitelAPI) WithHTTPClient(client *http.Client) *WebitelAPI {
	c.cfg.Client = client
	c.SetTransport(newTransportWithConfig(c.cfg))

	return c
}

func newTransportWithConfig(cfg *TransportConfig) *httptransport.Runtime {
	httpTransport := http.DefaultTransport.(*http.Transport)
	httpTransport.TLSClientConfig = cfg.TLSConfig
	retryableTransport := &transport.RetryableTransport{
		Transport:        httpTransport,
		NumRetries:       cfg.NumRetries,
		RetryTimeout:     cfg.RetryTimeout,
		RetryStatusCodes: cfg.RetryStatusCodes,
		HTTPHeaders:      cfg.HTTPHeaders,
	}

	tr := httptransport.NewWithClient(cfg.Host, cfg.BasePath, cfg.Schemes, cfg.Client)
	tr.Transport = retryableTransport

	var auth []runtime.ClientAuthInfoWriter
	if cfg.APIKey != "" {
		APIKey := httptransport.APIKeyAuth("X-Webitel-Access", "header", cfg.APIKey)
		auth = append(auth, APIKey)
	}

	tr.DefaultAuthentication = httptransport.Compose(auth...)

	// The default runtime.JSONConsumer uses `json.Number` for numbers which is unwieldy to use.
	tr.Consumers[runtime.JSONMime] = runtime.ConsumerFunc(func(reader io.Reader, data interface{}) error {
		return json.NewDecoder(reader).Decode(data)
	})

	tr.Debug = cfg.Debug

	return tr
}
