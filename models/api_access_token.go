// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIAccessToken OAuth 2.0 Access Token Response compatible
//
// swagger:model api.AccessToken
type APIAccessToken struct {

	// REQUIRED. The access token issued by the authorization server.
	AccessToken string `json:"access_token,omitempty"`

	// RECOMMENDED. The lifetime in seconds of the access token.
	ExpiresIn int32 `json:"expires_in,omitempty"`

	// OPTIONAL. The refresh token, which can be used to obtain
	// new access tokens using the same authorization grant.
	RefreshToken string `json:"refresh_token,omitempty"`

	// OPTIONAL, if identical to the scope requested by the client;
	// otherwise, REQUIRED. The scope of the access token.
	// repeated string scope = 5 [ json_name = "scope" ];
	// REQUIRED if the "state" parameter was present in the client
	// authorization request. The exact value received from the client.
	State string `json:"state,omitempty"`

	// REQUIRED. The type of the token issued. Value is case insensitive.
	TokenType string `json:"token_type,omitempty"`
}

// Validate validates this api access token
func (m *APIAccessToken) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api access token based on context it is used
func (m *APIAccessToken) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIAccessToken) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIAccessToken) UnmarshalBinary(b []byte) error {
	var res APIAccessToken
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
