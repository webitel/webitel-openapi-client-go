// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APILDAPUpdateLDAPTemplateBodyTemplate Template changes.
//
// Template changes.
//
// swagger:model apiLdapUpdateLdapTemplateBodyTemplate
type APILDAPUpdateLDAPTemplateBodyTemplate struct {

	// OPTIONAL. Agent objclass fields mapping
	Agent interface{} `json:"agent,omitempty"`

	// Optional. LDAP Search base entry DN
	BaseDn string `json:"base_dn,omitempty"`

	// catalog
	Catalog *APILDAPUpdateLDAPTemplateBodyTemplateCatalog `json:"catalog,omitempty"`

	// READONLY. Operational attributes
	//
	// unix
	CreatedAt string `json:"created_at,omitempty"`

	// user
	CreatedBy *APIUserID `json:"created_by,omitempty"`

	// OPTIONAL. Device objclass fields mapping
	Device interface{} `json:"device,omitempty"`

	// Optional. This Template is activated ?
	Enabled bool `json:"enabled,omitempty"`

	// Name this template
	Name string `json:"name,omitempty"`

	// OPTIONAL. Role objclass fields mapping (Not implemented yet)
	Role interface{} `json:"role,omitempty"`

	// Required. LDAP Search filter string
	Search string `json:"search,omitempty"`

	// unix
	UpdatedAt string `json:"updated_at,omitempty"`

	// user
	UpdatedBy *APIUserID `json:"updated_by,omitempty"`

	// OPTIONAL. User objclass fields mapping
	User interface{} `json:"user,omitempty"`
}

// Validate validates this api Ldap update Ldap template body template
func (m *APILDAPUpdateLDAPTemplateBodyTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCatalog(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) validateCatalog(formats strfmt.Registry) error {
	if swag.IsZero(m.Catalog) { // not required
		return nil
	}

	if m.Catalog != nil {
		if err := m.Catalog.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalog")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("catalog")
			}
			return err
		}
	}

	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) validateCreatedBy(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedBy) { // not required
		return nil
	}

	if m.CreatedBy != nil {
		if err := m.CreatedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("created_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("created_by")
			}
			return err
		}
	}

	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) validateUpdatedBy(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedBy) { // not required
		return nil
	}

	if m.UpdatedBy != nil {
		if err := m.UpdatedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updated_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updated_by")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this api Ldap update Ldap template body template based on the context it is used
func (m *APILDAPUpdateLDAPTemplateBodyTemplate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCatalog(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCreatedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUpdatedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) contextValidateCatalog(ctx context.Context, formats strfmt.Registry) error {

	if m.Catalog != nil {

		if swag.IsZero(m.Catalog) { // not required
			return nil
		}

		if err := m.Catalog.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalog")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("catalog")
			}
			return err
		}
	}

	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) contextValidateCreatedBy(ctx context.Context, formats strfmt.Registry) error {

	if m.CreatedBy != nil {

		if swag.IsZero(m.CreatedBy) { // not required
			return nil
		}

		if err := m.CreatedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("created_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("created_by")
			}
			return err
		}
	}

	return nil
}

func (m *APILDAPUpdateLDAPTemplateBodyTemplate) contextValidateUpdatedBy(ctx context.Context, formats strfmt.Registry) error {

	if m.UpdatedBy != nil {

		if swag.IsZero(m.UpdatedBy) { // not required
			return nil
		}

		if err := m.UpdatedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updated_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updated_by")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APILDAPUpdateLDAPTemplateBodyTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APILDAPUpdateLDAPTemplateBodyTemplate) UnmarshalBinary(b []byte) error {
	var res APILDAPUpdateLDAPTemplateBodyTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
