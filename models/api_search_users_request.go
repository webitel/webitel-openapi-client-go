// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APISearchUsersRequest api search users request
//
// swagger:model api.SearchUsersRequest
type APISearchUsersRequest struct {

	// ----- View Modes -----------------------------
	// NOTE: by default, search NOT 'deleted' objects ONLY
	//
	// filter: include 'deleted' ALSO ! (inactive)
	Any bool `json:"any,omitempty"`

	// filter: .deleted_at NOTNULL (view: RECYCLE)
	Deleted bool `json:"deleted,omitempty"`

	// filter: .extension LIKE '{extension}'
	Extension string `json:"extension,omitempty"`

	// // navigation filter
	// repeated int64 roles = 7;
	// ----- Search Options -------------------------
	//
	// select: output (fields,...)
	Fields []string `json:"fields"`

	// ----- Base Filters ---------------------------
	//
	// filter: .id = any({id}...)
	ID []string `json:"id"`

	// filter: .name ILIKE '{name}'
	Name string `json:"name,omitempty"`

	// filter: .id <> all({not_ids}...)
	NotID []string `json:"not_id"`

	// select: offset {page}
	Page int32 `json:"page,omitempty"`

	// presence
	Presence *APISearchUsersRequestPresence `json:"presence,omitempty"`

	// ----- User-specific Filters ------------------
	//
	// filter: (.name|.username|.extension|.status) ILIKE '{q}'
	Q string `json:"q,omitempty"`

	// select: limit {size}
	Size int32 `json:"size,omitempty"`

	// select: order by (fields,...)
	Sort []string `json:"sort"`

	// filter: .status ILIKE '{status}'
	Status string `json:"status,omitempty"`

	// filter: .username ILIKE '{username}'
	Username string `json:"username,omitempty"`
}

// Validate validates this api search users request
func (m *APISearchUsersRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePresence(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APISearchUsersRequest) validatePresence(formats strfmt.Registry) error {
	if swag.IsZero(m.Presence) { // not required
		return nil
	}

	if m.Presence != nil {
		if err := m.Presence.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("presence")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("presence")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this api search users request based on the context it is used
func (m *APISearchUsersRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePresence(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APISearchUsersRequest) contextValidatePresence(ctx context.Context, formats strfmt.Registry) error {

	if m.Presence != nil {

		if swag.IsZero(m.Presence) { // not required
			return nil
		}

		if err := m.Presence.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("presence")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("presence")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APISearchUsersRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APISearchUsersRequest) UnmarshalBinary(b []byte) error {
	var res APISearchUsersRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
