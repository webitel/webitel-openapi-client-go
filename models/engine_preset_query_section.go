// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EnginePresetQuerySection engine preset query section
//
// swagger:model enginePresetQuerySection
type EnginePresetQuerySection string

func NewEnginePresetQuerySection(value EnginePresetQuerySection) *EnginePresetQuerySection {
	return &value
}

// Pointer returns a pointer to a freshly-allocated EnginePresetQuerySection.
func (m EnginePresetQuerySection) Pointer() *EnginePresetQuerySection {
	return &m
}

const (

	// EnginePresetQuerySectionSectionDefault captures enum value "section_default"
	EnginePresetQuerySectionSectionDefault EnginePresetQuerySection = "section_default"

	// EnginePresetQuerySectionSectionCalls captures enum value "section_calls"
	EnginePresetQuerySectionSectionCalls EnginePresetQuerySection = "section_calls"
)

// for schema
var enginePresetQuerySectionEnum []interface{}

func init() {
	var res []EnginePresetQuerySection
	if err := json.Unmarshal([]byte(`["section_default","section_calls"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		enginePresetQuerySectionEnum = append(enginePresetQuerySectionEnum, v)
	}
}

func (m EnginePresetQuerySection) validateEnginePresetQuerySectionEnum(path, location string, value EnginePresetQuerySection) error {
	if err := validate.EnumCase(path, location, value, enginePresetQuerySectionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this engine preset query section
func (m EnginePresetQuerySection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEnginePresetQuerySectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this engine preset query section based on context it is used
func (m EnginePresetQuerySection) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
