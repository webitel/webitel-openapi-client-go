// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WebitelChatButtonRequest Type of request to share contact info
//
// - phone: Phone Number
//   - email: Email Address
//   - contact: General Form
//   - location: Current Location
//
// swagger:model webitel.chat.Button.Request
type WebitelChatButtonRequest string

func NewWebitelChatButtonRequest(value WebitelChatButtonRequest) *WebitelChatButtonRequest {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WebitelChatButtonRequest.
func (m WebitelChatButtonRequest) Pointer() *WebitelChatButtonRequest {
	return &m
}

const (

	// WebitelChatButtonRequestPhone captures enum value "phone"
	WebitelChatButtonRequestPhone WebitelChatButtonRequest = "phone"

	// WebitelChatButtonRequestEmail captures enum value "email"
	WebitelChatButtonRequestEmail WebitelChatButtonRequest = "email"

	// WebitelChatButtonRequestContact captures enum value "contact"
	WebitelChatButtonRequestContact WebitelChatButtonRequest = "contact"

	// WebitelChatButtonRequestLocation captures enum value "location"
	WebitelChatButtonRequestLocation WebitelChatButtonRequest = "location"
)

// for schema
var webitelChatButtonRequestEnum []interface{}

func init() {
	var res []WebitelChatButtonRequest
	if err := json.Unmarshal([]byte(`["phone","email","contact","location"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webitelChatButtonRequestEnum = append(webitelChatButtonRequestEnum, v)
	}
}

func (m WebitelChatButtonRequest) validateWebitelChatButtonRequestEnum(path, location string, value WebitelChatButtonRequest) error {
	if err := validate.EnumCase(path, location, value, webitelChatButtonRequestEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this webitel chat button request
func (m WebitelChatButtonRequest) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWebitelChatButtonRequestEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this webitel chat button request based on context it is used
func (m WebitelChatButtonRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
