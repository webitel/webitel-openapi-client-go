// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WebitelChatMessageButtonRequest Type of request to share contact info
//
// - phone: Phone Number
//   - email: Email Address
//   - contact: General Form
//   - location: Current Location
//
// swagger:model webitel.chat.MessageButton.Request
type WebitelChatMessageButtonRequest string

func NewWebitelChatMessageButtonRequest(value WebitelChatMessageButtonRequest) *WebitelChatMessageButtonRequest {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WebitelChatMessageButtonRequest.
func (m WebitelChatMessageButtonRequest) Pointer() *WebitelChatMessageButtonRequest {
	return &m
}

const (

	// WebitelChatMessageButtonRequestPhone captures enum value "phone"
	WebitelChatMessageButtonRequestPhone WebitelChatMessageButtonRequest = "phone"

	// WebitelChatMessageButtonRequestEmail captures enum value "email"
	WebitelChatMessageButtonRequestEmail WebitelChatMessageButtonRequest = "email"

	// WebitelChatMessageButtonRequestContact captures enum value "contact"
	WebitelChatMessageButtonRequestContact WebitelChatMessageButtonRequest = "contact"

	// WebitelChatMessageButtonRequestLocation captures enum value "location"
	WebitelChatMessageButtonRequestLocation WebitelChatMessageButtonRequest = "location"
)

// for schema
var webitelChatMessageButtonRequestEnum []interface{}

func init() {
	var res []WebitelChatMessageButtonRequest
	if err := json.Unmarshal([]byte(`["phone","email","contact","location"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webitelChatMessageButtonRequestEnum = append(webitelChatMessageButtonRequestEnum, v)
	}
}

func (m WebitelChatMessageButtonRequest) validateWebitelChatMessageButtonRequestEnum(path, location string, value WebitelChatMessageButtonRequest) error {
	if err := validate.EnumCase(path, location, value, webitelChatMessageButtonRequestEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this webitel chat message button request
func (m WebitelChatMessageButtonRequest) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWebitelChatMessageButtonRequestEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this webitel chat message button request based on context it is used
func (m WebitelChatMessageButtonRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
