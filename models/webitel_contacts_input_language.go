// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebitelContactsInputLanguage An input of the Contact's language.
// Example: {"primary":false,"tag":"uk"}
//
// swagger:model webitel.contacts.InputLanguage
type WebitelContactsInputLanguage struct {

	// Unique ID of the latest version of an existing association.
	// Required: true
	Etag *string `json:"etag"`

	// Indicates whether this association must be default
	// among others of the same type.
	Primary bool `json:"primary,omitempty"`

	// NEW, well-formed IETF BCP 47 language tag representing the locale.
	// https://www.rfc-editor.org/info/bcp47
	Tag string `json:"tag,omitempty"`
}

// Validate validates this webitel contacts input language
func (m *WebitelContactsInputLanguage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEtag(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebitelContactsInputLanguage) validateEtag(formats strfmt.Registry) error {

	if err := validate.Required("etag", "body", m.Etag); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this webitel contacts input language based on context it is used
func (m *WebitelContactsInputLanguage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WebitelContactsInputLanguage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebitelContactsInputLanguage) UnmarshalBinary(b []byte) error {
	var res WebitelContactsInputLanguage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
