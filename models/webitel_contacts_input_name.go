// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WebitelContactsInputName webitel contacts input name
//
// swagger:model webitel.contacts.InputName
type WebitelContactsInputName struct {

	// REQUIRED. End-User's full name in displayable form
	// including all name parts, possibly including titles and suffixes,
	// ordered according to the End-User's locale and preferences.
	CommonName string `json:"common_name,omitempty"`

	// OPTIONAL. Surname(s) or last name(s) of the End-User.
	// Note that in some cultures, people can have multiple family names or no family name;
	// all can be present, with the names being separated by space characters.
	// https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name
	FamilyName string `json:"family_name,omitempty"`

	// OPTIONAL. Given name(s) or first name(s) of the End-User.
	// Note that in some cultures, people can have multiple given names;
	// all can be present, with the names being separated by space characters.
	// https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name
	GivenName string `json:"given_name,omitempty"`

	// OPTIONAL. Middle name(s) of the End-User.
	// Note that in some cultures, people can have multiple middle names;
	// all can be present, with the names being separated by space characters.
	// Also note that in some cultures, middle names are not used.
	MiddleName string `json:"middle_name,omitempty"`

	// Indicate whether Contact, as a Person, realy owns this associated name.
	Verified bool `json:"verified,omitempty"`
}

// Validate validates this webitel contacts input name
func (m *WebitelContactsInputName) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this webitel contacts input name based on context it is used
func (m *WebitelContactsInputName) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WebitelContactsInputName) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebitelContactsInputName) UnmarshalBinary(b []byte) error {
	var res WebitelContactsInputName
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
