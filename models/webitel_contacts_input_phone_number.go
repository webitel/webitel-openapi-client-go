// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebitelContactsInputPhoneNumber Input of the contact phone number.
//
// swagger:model webitel.contacts.InputPhoneNumber
type WebitelContactsInputPhoneNumber struct {

	// Unique ID of the latest version of an existing resorce.
	Etag string `json:"etag,omitempty"`

	// The phone number.
	// Required: true
	Number *string `json:"number"`

	// Indicates whether this phone number is default within other channels of the same type(phone).
	Primary bool `json:"primary,omitempty"`

	// The type of the phone number.
	// Reference on CommunicationType dictionary.
	// Used for outbound routing while dialup a phone number.
	// The type can be custom or one of these predefined values:
	// - home
	// - work
	// - mobile
	// - homeFax
	// - workFax
	// - otherFax
	// - pager
	// - workMobile
	// - workPager
	// - main
	// - googleVoice
	// - other
	Type *WebitelContactsLookup `json:"type,omitempty"`

	// Indicate whether Contact, as a Person, realy owns this associated phone number.
	// In other words: whether Contact is reachable thru this 'phone' communication channel ?
	Verified bool `json:"verified,omitempty"`
}

// Validate validates this webitel contacts input phone number
func (m *WebitelContactsInputPhoneNumber) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebitelContactsInputPhoneNumber) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("number", "body", m.Number); err != nil {
		return err
	}

	return nil
}

func (m *WebitelContactsInputPhoneNumber) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if m.Type != nil {
		if err := m.Type.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("type")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this webitel contacts input phone number based on the context it is used
func (m *WebitelContactsInputPhoneNumber) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebitelContactsInputPhoneNumber) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	if m.Type != nil {

		if swag.IsZero(m.Type) { // not required
			return nil
		}

		if err := m.Type.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("type")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WebitelContactsInputPhoneNumber) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebitelContactsInputPhoneNumber) UnmarshalBinary(b []byte) error {
	var res WebitelContactsInputPhoneNumber
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
