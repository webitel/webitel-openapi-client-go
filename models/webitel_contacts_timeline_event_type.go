// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WebitelContactsTimelineEventType webitel contacts timeline event type
//
// swagger:model webitel.contacts.TimelineEventType
type WebitelContactsTimelineEventType string

func NewWebitelContactsTimelineEventType(value WebitelContactsTimelineEventType) *WebitelContactsTimelineEventType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WebitelContactsTimelineEventType.
func (m WebitelContactsTimelineEventType) Pointer() *WebitelContactsTimelineEventType {
	return &m
}

const (

	// WebitelContactsTimelineEventTypeChat captures enum value "chat"
	WebitelContactsTimelineEventTypeChat WebitelContactsTimelineEventType = "chat"

	// WebitelContactsTimelineEventTypeCall captures enum value "call"
	WebitelContactsTimelineEventTypeCall WebitelContactsTimelineEventType = "call"

	// WebitelContactsTimelineEventTypeEmail captures enum value "email"
	WebitelContactsTimelineEventTypeEmail WebitelContactsTimelineEventType = "email"
)

// for schema
var webitelContactsTimelineEventTypeEnum []interface{}

func init() {
	var res []WebitelContactsTimelineEventType
	if err := json.Unmarshal([]byte(`["chat","call","email"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webitelContactsTimelineEventTypeEnum = append(webitelContactsTimelineEventTypeEnum, v)
	}
}

func (m WebitelContactsTimelineEventType) validateWebitelContactsTimelineEventTypeEnum(path, location string, value WebitelContactsTimelineEventType) error {
	if err := validate.EnumCase(path, location, value, webitelContactsTimelineEventTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this webitel contacts timeline event type
func (m WebitelContactsTimelineEventType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWebitelContactsTimelineEventTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this webitel contacts timeline event type based on context it is used
func (m WebitelContactsTimelineEventType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
